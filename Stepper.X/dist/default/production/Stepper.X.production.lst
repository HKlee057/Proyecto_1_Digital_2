

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 18 20:50:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0014                     _SSPCON	set	20
   363  0009                     _PORTEbits	set	9
   364  0006                     _PORTBbits	set	6
   365  0007                     _PORTC	set	7
   366  0006                     _PORTB	set	6
   367  0005                     _PORTA	set	5
   368  0008                     _PORTD	set	8
   369  0013                     _SSPBUF	set	19
   370  0014                     _SSPCONbits	set	20
   371  000C                     _PIR1bits	set	12
   372  0063                     _SSPIF	set	99
   373  005E                     _PEIE	set	94
   374  005F                     _GIE	set	95
   375  0091                     _SSPCON2bits	set	145
   376  0087                     _TRISCbits	set	135
   377  0094                     _SSPSTAT	set	148
   378  0093                     _SSPADD	set	147
   379  0091                     _SSPCON2	set	145
   380  008F                     _OSCCONbits	set	143
   381  0089                     _TRISE	set	137
   382  0088                     _TRISD	set	136
   383  0087                     _TRISC	set	135
   384  0086                     _TRISB	set	134
   385  0085                     _TRISA	set	133
   386  0094                     _SSPSTATbits	set	148
   387  0463                     _SSPIE	set	1123
   388  043C                     _TRISC4	set	1084
   389  043B                     _TRISC3	set	1083
   390  04A0                     _BF	set	1184
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           ; #config settings
   395  0000                     
   396                           	psect	cinit
   397  000F                     start_initialization:	
   398  000F                     __initialization:	
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   404  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   405  0013  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   406  0014  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   407                           
   408                           ; Clear objects allocated to BANK0
   409  0015  1283               	bcf	3,5	;RP0=0, select bank0
   410  0016  1303               	bcf	3,6	;RP1=0, select bank0
   411  0017  01A0               	clrf	__pbssBANK0& (0+127)
   412  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   413  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   414  001A                     end_of_initialization:	
   415                           ;End of C runtime variable initialization code
   416                           
   417  001A                     __end_of__initialization:	
   418  001A  0183               	clrf	3
   419  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   420                           
   421                           	psect	bssCOMMON
   422  0078                     __pbssCOMMON:	
   423  0078                     _j:	
   424  0078                     	ds	1
   425  0079                     _k:	
   426  0079                     	ds	1
   427  007A                     _m:	
   428  007A                     	ds	1
   429  007B                     _n:	
   430  007B                     	ds	1
   431  007C                     _estado:	
   432  007C                     	ds	1
   433  007D                     _z:	
   434  007D                     	ds	1
   435                           
   436                           	psect	bssBANK0
   437  0020                     __pbssBANK0:	
   438  0020                     _move_servo:	
   439  0020                     	ds	2
   440  0022                     _sensor_signal:	
   441  0022                     	ds	1
   442                           
   443                           	psect	cstackCOMMON
   444  0070                     __pcstackCOMMON:	
   445  0070                     ?_initOsc:	
   446  0070                     ?_init:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_I2C_Slave_Init:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_isr:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_isr:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_main:	
   459                           ; 1 bytes @ 0x0
   460                           
   461                           
   462                           ; 1 bytes @ 0x0
   463  0070                     	ds	3
   464  0073                     ??_initOsc:	
   465  0073                     ??_I2C_Slave_Init:	
   466                           ; 1 bytes @ 0x3
   467                           
   468  0073                     I2C_Slave_Init@address:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 1 bytes @ 0x3
   473  0073                     	ds	1
   474  0074                     ??_init:	
   475                           
   476                           ; 1 bytes @ 0x4
   477  0074                     	ds	1
   478  0075                     initOsc@frec:	
   479                           
   480                           ; 1 bytes @ 0x5
   481  0075                     	ds	1
   482  0076                     ??_main:	
   483                           
   484                           ; 1 bytes @ 0x6
   485  0076                     	ds	2
   486                           
   487                           	psect	maintext
   488  001E                     __pmaintext:	
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 93 in file "Stepper_Motor.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : B00/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0
   510 ;;      Temps:          2       0       0       0       0
   511 ;;      Totals:         2       0       0       0       0
   512 ;;Total ram usage:        2 bytes
   513 ;; Hardware stack levels required when called:    3
   514 ;; This function calls:
   515 ;;		_init
   516 ;;		_initOsc
   517 ;; This function is called by:
   518 ;;		Startup code after reset
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           
   523                           ;psect for function _main
   524  001E                     _main:	
   525  001E                     l834:	
   526                           ;incstack = 0
   527                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   528                           
   529                           
   530                           ;Stepper_Motor.c: 94:     initOsc(7);
   531  001E  3007               	movlw	7
   532  001F  120A  118A  218C  120A  118A  	fcall	_initOsc
   533  0024                     l836:	
   534                           
   535                           ;Stepper_Motor.c: 95:     init();
   536  0024  120A  118A  2202  120A  118A  	fcall	_init
   537  0029                     l838:	
   538                           
   539                           ;Stepper_Motor.c: 97:     PORTA = 0x00;
   540  0029  1283               	bcf	3,5	;RP0=0, select bank0
   541  002A  1303               	bcf	3,6	;RP1=0, select bank0
   542  002B  0185               	clrf	5	;volatile
   543  002C                     l840:	
   544                           
   545                           ;Stepper_Motor.c: 98:     PORTB = 0x00;
   546  002C  0186               	clrf	6	;volatile
   547  002D                     l842:	
   548                           
   549                           ;Stepper_Motor.c: 99:     PORTC = 0x00;
   550  002D  0187               	clrf	7	;volatile
   551  002E                     l844:	
   552                           
   553                           ;Stepper_Motor.c: 100:     PORTD = 0x00;
   554  002E  0188               	clrf	8	;volatile
   555  002F                     l846:	
   556                           
   557                           ;Stepper_Motor.c: 102:         if(PORTD == 1){
   558  002F  1283               	bcf	3,5	;RP0=0, select bank0
   559  0030  1303               	bcf	3,6	;RP1=0, select bank0
   560  0031  0308               	decf	8,w	;volatile
   561  0032  1D03               	btfss	3,2
   562  0033  2835               	goto	u121
   563  0034  2836               	goto	u120
   564  0035                     u121:	
   565  0035  2924               	goto	l84
   566  0036                     u120:	
   567  0036                     l848:	
   568                           
   569                           ;Stepper_Motor.c: 103:             PORTBbits.RB0 = 1;
   570  0036  1406               	bsf	6,0	;volatile
   571                           
   572                           ;Stepper_Motor.c: 104:             if(PORTEbits.RE2 == 1){
   573  0037  1D09               	btfss	9,2	;volatile
   574  0038  283A               	goto	u131
   575  0039  283B               	goto	u130
   576  003A                     u131:	
   577  003A  289F               	goto	l85
   578  003B                     u130:	
   579  003B                     l850:	
   580                           
   581                           ;Stepper_Motor.c: 105:                 for (n=0;n<=20;n++){
   582  003B  01FB               	clrf	_n
   583  003C                     l856:	
   584                           
   585                           ;Stepper_Motor.c: 106:                     for(k=0;k<250;k++){
   586  003C  01F9               	clrf	_k
   587  003D                     l862:	
   588                           
   589                           ;Stepper_Motor.c: 107:                         PORTA = 0b00000001;
   590  003D  3001               	movlw	1
   591  003E  1283               	bcf	3,5	;RP0=0, select bank0
   592  003F  1303               	bcf	3,6	;RP1=0, select bank0
   593  0040  0085               	movwf	5	;volatile
   594                           
   595                           ;Stepper_Motor.c: 108:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   596  0041  3008               	movlw	8
   597  0042  00F7               	movwf	??_main+1
   598  0043  30C9               	movlw	201
   599  0044  00F6               	movwf	??_main
   600  0045                     u227:	
   601  0045  0BF6               	decfsz	??_main,f
   602  0046  2845               	goto	u227
   603  0047  0BF7               	decfsz	??_main+1,f
   604  0048  2845               	goto	u227
   605  0049  284A               	nop2
   606                           
   607                           ;Stepper_Motor.c: 109:                         PORTA = 0b00000011;
   608  004A  3003               	movlw	3
   609  004B  1283               	bcf	3,5	;RP0=0, select bank0
   610  004C  1303               	bcf	3,6	;RP1=0, select bank0
   611  004D  0085               	movwf	5	;volatile
   612                           
   613                           ;Stepper_Motor.c: 110:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   614  004E  3008               	movlw	8
   615  004F  00F7               	movwf	??_main+1
   616  0050  30C9               	movlw	201
   617  0051  00F6               	movwf	??_main
   618  0052                     u237:	
   619  0052  0BF6               	decfsz	??_main,f
   620  0053  2852               	goto	u237
   621  0054  0BF7               	decfsz	??_main+1,f
   622  0055  2852               	goto	u237
   623  0056  2857               	nop2
   624                           
   625                           ;Stepper_Motor.c: 111:                         PORTA = 0b00000010;
   626  0057  3002               	movlw	2
   627  0058  1283               	bcf	3,5	;RP0=0, select bank0
   628  0059  1303               	bcf	3,6	;RP1=0, select bank0
   629  005A  0085               	movwf	5	;volatile
   630                           
   631                           ;Stepper_Motor.c: 112:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   632  005B  3008               	movlw	8
   633  005C  00F7               	movwf	??_main+1
   634  005D  30C9               	movlw	201
   635  005E  00F6               	movwf	??_main
   636  005F                     u247:	
   637  005F  0BF6               	decfsz	??_main,f
   638  0060  285F               	goto	u247
   639  0061  0BF7               	decfsz	??_main+1,f
   640  0062  285F               	goto	u247
   641  0063  2864               	nop2
   642                           
   643                           ;Stepper_Motor.c: 113:                         PORTA = 0b00000110;
   644  0064  3006               	movlw	6
   645  0065  1283               	bcf	3,5	;RP0=0, select bank0
   646  0066  1303               	bcf	3,6	;RP1=0, select bank0
   647  0067  0085               	movwf	5	;volatile
   648                           
   649                           ;Stepper_Motor.c: 114:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   650  0068  3008               	movlw	8
   651  0069  00F7               	movwf	??_main+1
   652  006A  30C9               	movlw	201
   653  006B  00F6               	movwf	??_main
   654  006C                     u257:	
   655  006C  0BF6               	decfsz	??_main,f
   656  006D  286C               	goto	u257
   657  006E  0BF7               	decfsz	??_main+1,f
   658  006F  286C               	goto	u257
   659  0070  2871               	nop2
   660                           
   661                           ;Stepper_Motor.c: 115:                         PORTA = 0b00001000;
   662  0071  3008               	movlw	8
   663  0072  1283               	bcf	3,5	;RP0=0, select bank0
   664  0073  1303               	bcf	3,6	;RP1=0, select bank0
   665  0074  0085               	movwf	5	;volatile
   666                           
   667                           ;Stepper_Motor.c: 116:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   668  0075  3008               	movlw	8
   669  0076  00F7               	movwf	??_main+1
   670  0077  30C9               	movlw	201
   671  0078  00F6               	movwf	??_main
   672  0079                     u267:	
   673  0079  0BF6               	decfsz	??_main,f
   674  007A  2879               	goto	u267
   675  007B  0BF7               	decfsz	??_main+1,f
   676  007C  2879               	goto	u267
   677  007D  287E               	nop2
   678                           
   679                           ;Stepper_Motor.c: 117:                         PORTA = 0B00001001;
   680  007E  3009               	movlw	9
   681  007F  1283               	bcf	3,5	;RP0=0, select bank0
   682  0080  1303               	bcf	3,6	;RP1=0, select bank0
   683  0081  0085               	movwf	5	;volatile
   684                           
   685                           ;Stepper_Motor.c: 118:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   686  0082  3008               	movlw	8
   687  0083  00F7               	movwf	??_main+1
   688  0084  30C9               	movlw	201
   689  0085  00F6               	movwf	??_main
   690  0086                     u277:	
   691  0086  0BF6               	decfsz	??_main,f
   692  0087  2886               	goto	u277
   693  0088  0BF7               	decfsz	??_main+1,f
   694  0089  2886               	goto	u277
   695  008A  288B               	nop2
   696  008B                     l864:	
   697                           
   698                           ;Stepper_Motor.c: 119:                     }
   699  008B  3001               	movlw	1
   700  008C  00F6               	movwf	??_main
   701  008D  0876               	movf	??_main,w
   702  008E  07F9               	addwf	_k,f
   703  008F                     l866:	
   704  008F  30FA               	movlw	250
   705  0090  0279               	subwf	_k,w
   706  0091  1C03               	skipc
   707  0092  2894               	goto	u141
   708  0093  2895               	goto	u140
   709  0094                     u141:	
   710  0094  283D               	goto	l862
   711  0095                     u140:	
   712  0095                     l868:	
   713                           
   714                           ;Stepper_Motor.c: 120:                 }
   715  0095  3001               	movlw	1
   716  0096  00F6               	movwf	??_main
   717  0097  0876               	movf	??_main,w
   718  0098  07FB               	addwf	_n,f
   719  0099                     l870:	
   720  0099  3015               	movlw	21
   721  009A  027B               	subwf	_n,w
   722  009B  1C03               	skipc
   723  009C  289E               	goto	u151
   724  009D  289F               	goto	u150
   725  009E                     u151:	
   726  009E  283C               	goto	l856
   727  009F                     u150:	
   728  009F                     l85:	
   729                           ;Stepper_Motor.c: 121:             }
   730                           
   731                           
   732                           ;Stepper_Motor.c: 122:             if(PORTEbits.RE1 == 1){
   733  009F  1283               	bcf	3,5	;RP0=0, select bank0
   734  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   735  00A1  1C89               	btfss	9,1	;volatile
   736  00A2  28A4               	goto	u161
   737  00A3  28A5               	goto	u160
   738  00A4                     u161:	
   739  00A4  282F               	goto	l846
   740  00A5                     u160:	
   741  00A5                     l872:	
   742                           
   743                           ;Stepper_Motor.c: 123:                 for(m=0;m<=18;m++){
   744  00A5  01FA               	clrf	_m
   745  00A6                     l878:	
   746                           
   747                           ;Stepper_Motor.c: 124:                     for(j=0;j<250;j++){
   748  00A6  01F8               	clrf	_j
   749  00A7                     l884:	
   750                           
   751                           ;Stepper_Motor.c: 125:                         PORTA=0b00001001;
   752  00A7  3009               	movlw	9
   753  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   754  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   755  00AA  0085               	movwf	5	;volatile
   756                           
   757                           ;Stepper_Motor.c: 126:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   758  00AB  3008               	movlw	8
   759  00AC  00F7               	movwf	??_main+1
   760  00AD  30C9               	movlw	201
   761  00AE  00F6               	movwf	??_main
   762  00AF                     u287:	
   763  00AF  0BF6               	decfsz	??_main,f
   764  00B0  28AF               	goto	u287
   765  00B1  0BF7               	decfsz	??_main+1,f
   766  00B2  28AF               	goto	u287
   767  00B3  28B4               	nop2
   768                           
   769                           ;Stepper_Motor.c: 127:                         PORTA=0b00001000;
   770  00B4  3008               	movlw	8
   771  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   772  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   773  00B7  0085               	movwf	5	;volatile
   774                           
   775                           ;Stepper_Motor.c: 128:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   776  00B8  3008               	movlw	8
   777  00B9  00F7               	movwf	??_main+1
   778  00BA  30C9               	movlw	201
   779  00BB  00F6               	movwf	??_main
   780  00BC                     u297:	
   781  00BC  0BF6               	decfsz	??_main,f
   782  00BD  28BC               	goto	u297
   783  00BE  0BF7               	decfsz	??_main+1,f
   784  00BF  28BC               	goto	u297
   785  00C0  28C1               	nop2
   786                           
   787                           ;Stepper_Motor.c: 129:                         PORTA=0b00001100;
   788  00C1  300C               	movlw	12
   789  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   790  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   791  00C4  0085               	movwf	5	;volatile
   792                           
   793                           ;Stepper_Motor.c: 130:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   794  00C5  3008               	movlw	8
   795  00C6  00F7               	movwf	??_main+1
   796  00C7  30C9               	movlw	201
   797  00C8  00F6               	movwf	??_main
   798  00C9                     u307:	
   799  00C9  0BF6               	decfsz	??_main,f
   800  00CA  28C9               	goto	u307
   801  00CB  0BF7               	decfsz	??_main+1,f
   802  00CC  28C9               	goto	u307
   803  00CD  28CE               	nop2
   804                           
   805                           ;Stepper_Motor.c: 131:                         PORTA=0b00000100;
   806  00CE  3004               	movlw	4
   807  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   808  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   809  00D1  0085               	movwf	5	;volatile
   810                           
   811                           ;Stepper_Motor.c: 132:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   812  00D2  3008               	movlw	8
   813  00D3  00F7               	movwf	??_main+1
   814  00D4  30C9               	movlw	201
   815  00D5  00F6               	movwf	??_main
   816  00D6                     u317:	
   817  00D6  0BF6               	decfsz	??_main,f
   818  00D7  28D6               	goto	u317
   819  00D8  0BF7               	decfsz	??_main+1,f
   820  00D9  28D6               	goto	u317
   821  00DA  28DB               	nop2
   822                           
   823                           ;Stepper_Motor.c: 133:                         PORTA=0b00000110;
   824  00DB  3006               	movlw	6
   825  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   826  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   827  00DE  0085               	movwf	5	;volatile
   828                           
   829                           ;Stepper_Motor.c: 134:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   830  00DF  3008               	movlw	8
   831  00E0  00F7               	movwf	??_main+1
   832  00E1  30C9               	movlw	201
   833  00E2  00F6               	movwf	??_main
   834  00E3                     u327:	
   835  00E3  0BF6               	decfsz	??_main,f
   836  00E4  28E3               	goto	u327
   837  00E5  0BF7               	decfsz	??_main+1,f
   838  00E6  28E3               	goto	u327
   839  00E7  28E8               	nop2
   840                           
   841                           ;Stepper_Motor.c: 135:                         PORTA=0b00000010;
   842  00E8  3002               	movlw	2
   843  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   844  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   845  00EB  0085               	movwf	5	;volatile
   846                           
   847                           ;Stepper_Motor.c: 136:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   848  00EC  3008               	movlw	8
   849  00ED  00F7               	movwf	??_main+1
   850  00EE  30C9               	movlw	201
   851  00EF  00F6               	movwf	??_main
   852  00F0                     u337:	
   853  00F0  0BF6               	decfsz	??_main,f
   854  00F1  28F0               	goto	u337
   855  00F2  0BF7               	decfsz	??_main+1,f
   856  00F3  28F0               	goto	u337
   857  00F4  28F5               	nop2
   858                           
   859                           ;Stepper_Motor.c: 137:                         PORTA=0b00000011;
   860  00F5  3003               	movlw	3
   861  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   862  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   863  00F8  0085               	movwf	5	;volatile
   864                           
   865                           ;Stepper_Motor.c: 138:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   866  00F9  3008               	movlw	8
   867  00FA  00F7               	movwf	??_main+1
   868  00FB  30C9               	movlw	201
   869  00FC  00F6               	movwf	??_main
   870  00FD                     u347:	
   871  00FD  0BF6               	decfsz	??_main,f
   872  00FE  28FD               	goto	u347
   873  00FF  0BF7               	decfsz	??_main+1,f
   874  0100  28FD               	goto	u347
   875  0101  2902               	nop2
   876                           
   877                           ;Stepper_Motor.c: 139:                         PORTA=0b00000001;
   878  0102  3001               	movlw	1
   879  0103  1283               	bcf	3,5	;RP0=0, select bank0
   880  0104  1303               	bcf	3,6	;RP1=0, select bank0
   881  0105  0085               	movwf	5	;volatile
   882                           
   883                           ;Stepper_Motor.c: 140:                         _delay((unsigned long)((3)*(8000000/4000.
      +                          0)));
   884  0106  3008               	movlw	8
   885  0107  00F7               	movwf	??_main+1
   886  0108  30C9               	movlw	201
   887  0109  00F6               	movwf	??_main
   888  010A                     u357:	
   889  010A  0BF6               	decfsz	??_main,f
   890  010B  290A               	goto	u357
   891  010C  0BF7               	decfsz	??_main+1,f
   892  010D  290A               	goto	u357
   893  010E  290F               	nop2
   894  010F                     l886:	
   895                           
   896                           ;Stepper_Motor.c: 141:                     }
   897  010F  3001               	movlw	1
   898  0110  00F6               	movwf	??_main
   899  0111  0876               	movf	??_main,w
   900  0112  07F8               	addwf	_j,f
   901  0113                     l888:	
   902  0113  30FA               	movlw	250
   903  0114  0278               	subwf	_j,w
   904  0115  1C03               	skipc
   905  0116  2918               	goto	u171
   906  0117  2919               	goto	u170
   907  0118                     u171:	
   908  0118  28A7               	goto	l884
   909  0119                     u170:	
   910  0119                     l890:	
   911                           
   912                           ;Stepper_Motor.c: 142:                 }
   913  0119  3001               	movlw	1
   914  011A  00F6               	movwf	??_main
   915  011B  0876               	movf	??_main,w
   916  011C  07FA               	addwf	_m,f
   917  011D                     l892:	
   918  011D  3013               	movlw	19
   919  011E  027A               	subwf	_m,w
   920  011F  1C03               	skipc
   921  0120  2922               	goto	u181
   922  0121  2923               	goto	u180
   923  0122                     u181:	
   924  0122  28A6               	goto	l878
   925  0123                     u180:	
   926  0123  282F               	goto	l846
   927  0124                     l84:	
   928                           
   929                           ;Stepper_Motor.c: 145:            PORTBbits.RB1 = 1;
   930  0124  1486               	bsf	6,1	;volatile
   931  0125  282F               	goto	l846
   932  0126  120A  118A  280C   	ljmp	start
   933  0129                     __end_of_main:	
   934                           
   935                           	psect	text1
   936  018C                     __ptext1:	
   937 ;; *************** function _initOsc *****************
   938 ;; Defined at:
   939 ;;		line 8 in file "Oscilador.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  frec            1    wreg     unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  frec            1    5[COMMON] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0
   955 ;;      Temps:          2       0       0       0       0
   956 ;;      Totals:         3       0       0       0       0
   957 ;;Total ram usage:        3 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _initOsc
   969  018C                     _initOsc:	
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   973                           ;initOsc@frec stored from wreg
   974  018C  00F5               	movwf	initOsc@frec
   975  018D                     l776:	
   976                           
   977                           ;Oscilador.c: 9:     switch(frec){
   978  018D  29C4               	goto	l780
   979  018E                     l107:	
   980                           ;Oscilador.c: 10:         case 0:
   981                           
   982                           
   983                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   984  018E  1683               	bsf	3,5	;RP0=1, select bank1
   985  018F  1303               	bcf	3,6	;RP1=0, select bank1
   986  0190  120F               	bcf	15,4	;volatile
   987                           
   988                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   989  0191  128F               	bcf	15,5	;volatile
   990                           
   991                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   992  0192  130F               	bcf	15,6	;volatile
   993                           
   994                           ;Oscilador.c: 14:             break;
   995  0193  29E6               	goto	l108
   996  0194                     l109:	
   997                           ;Oscilador.c: 15:         case 1:
   998                           
   999                           
  1000                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
  1001  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0196  160F               	bsf	15,4	;volatile
  1004                           
  1005                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
  1006  0197  128F               	bcf	15,5	;volatile
  1007                           
  1008                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
  1009  0198  130F               	bcf	15,6	;volatile
  1010                           
  1011                           ;Oscilador.c: 19:             break;
  1012  0199  29E6               	goto	l108
  1013  019A                     l110:	
  1014                           ;Oscilador.c: 20:         case 2:
  1015                           
  1016                           
  1017                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
  1018  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1019  019B  1303               	bcf	3,6	;RP1=0, select bank1
  1020  019C  120F               	bcf	15,4	;volatile
  1021                           
  1022                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
  1023  019D  168F               	bsf	15,5	;volatile
  1024                           
  1025                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
  1026  019E  130F               	bcf	15,6	;volatile
  1027                           
  1028                           ;Oscilador.c: 24:             break;
  1029  019F  29E6               	goto	l108
  1030  01A0                     l111:	
  1031                           ;Oscilador.c: 25:         case 3:
  1032                           
  1033                           
  1034                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
  1035  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  1036  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  1037  01A2  160F               	bsf	15,4	;volatile
  1038                           
  1039                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
  1040  01A3  168F               	bsf	15,5	;volatile
  1041                           
  1042                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
  1043  01A4  130F               	bcf	15,6	;volatile
  1044                           
  1045                           ;Oscilador.c: 29:             break;
  1046  01A5  29E6               	goto	l108
  1047  01A6                     l112:	
  1048                           ;Oscilador.c: 30:         case 4:
  1049                           
  1050                           
  1051                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
  1052  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1053  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1054  01A8  120F               	bcf	15,4	;volatile
  1055                           
  1056                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
  1057  01A9  128F               	bcf	15,5	;volatile
  1058                           
  1059                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
  1060  01AA  170F               	bsf	15,6	;volatile
  1061                           
  1062                           ;Oscilador.c: 34:             break;
  1063  01AB  29E6               	goto	l108
  1064  01AC                     l113:	
  1065                           ;Oscilador.c: 35:         case 5:
  1066                           
  1067                           
  1068                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
  1069  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1070  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1071  01AE  160F               	bsf	15,4	;volatile
  1072                           
  1073                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
  1074  01AF  128F               	bcf	15,5	;volatile
  1075                           
  1076                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
  1077  01B0  170F               	bsf	15,6	;volatile
  1078                           
  1079                           ;Oscilador.c: 39:             break;
  1080  01B1  29E6               	goto	l108
  1081  01B2                     l114:	
  1082                           ;Oscilador.c: 40:         case 6:
  1083                           
  1084                           
  1085                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
  1086  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1087  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1088  01B4  120F               	bcf	15,4	;volatile
  1089                           
  1090                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
  1091  01B5  168F               	bsf	15,5	;volatile
  1092                           
  1093                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
  1094  01B6  170F               	bsf	15,6	;volatile
  1095                           
  1096                           ;Oscilador.c: 44:             break;
  1097  01B7  29E6               	goto	l108
  1098  01B8                     l115:	
  1099                           ;Oscilador.c: 45:         case 7:
  1100                           
  1101                           
  1102                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
  1103  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1104  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1105  01BA  160F               	bsf	15,4	;volatile
  1106                           
  1107                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
  1108  01BB  168F               	bsf	15,5	;volatile
  1109                           
  1110                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
  1111  01BC  170F               	bsf	15,6	;volatile
  1112                           
  1113                           ;Oscilador.c: 49:             break;
  1114  01BD  29E6               	goto	l108
  1115  01BE                     l116:	
  1116                           ;Oscilador.c: 50:         default:
  1117                           
  1118                           
  1119                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
  1120  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1121  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1122  01C0  120F               	bcf	15,4	;volatile
  1123                           
  1124                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
  1125  01C1  168F               	bsf	15,5	;volatile
  1126                           
  1127                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1128  01C2  170F               	bsf	15,6	;volatile
  1129                           
  1130                           ;Oscilador.c: 54:             break;
  1131  01C3  29E6               	goto	l108
  1132  01C4                     l780:	
  1133  01C4  0875               	movf	initOsc@frec,w
  1134  01C5  00F3               	movwf	??_initOsc
  1135  01C6  01F4               	clrf	??_initOsc+1
  1136                           
  1137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1138                           ; Switch size 1, requested type "simple"
  1139                           ; Number of cases is 1, Range of values is 0 to 0
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte            4     3 (average)
  1143                           ; direct_byte           11     8 (fixed)
  1144                           ; jumptable            260     6 (fixed)
  1145                           ;	Chosen strategy is simple_byte
  1146  01C7  0874               	movf	??_initOsc+1,w
  1147  01C8  3A00               	xorlw	0	; case 0
  1148  01C9  1903               	skipnz
  1149  01CA  29CC               	goto	l956
  1150  01CB  29BE               	goto	l116
  1151  01CC                     l956:	
  1152                           
  1153                           ; Switch size 1, requested type "simple"
  1154                           ; Number of cases is 8, Range of values is 0 to 7
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte           25    13 (average)
  1158                           ; direct_byte           32     8 (fixed)
  1159                           ; jumptable            260     6 (fixed)
  1160                           ;	Chosen strategy is simple_byte
  1161  01CC  0873               	movf	??_initOsc,w
  1162  01CD  3A00               	xorlw	0	; case 0
  1163  01CE  1903               	skipnz
  1164  01CF  298E               	goto	l107
  1165  01D0  3A01               	xorlw	1	; case 1
  1166  01D1  1903               	skipnz
  1167  01D2  2994               	goto	l109
  1168  01D3  3A03               	xorlw	3	; case 2
  1169  01D4  1903               	skipnz
  1170  01D5  299A               	goto	l110
  1171  01D6  3A01               	xorlw	1	; case 3
  1172  01D7  1903               	skipnz
  1173  01D8  29A0               	goto	l111
  1174  01D9  3A07               	xorlw	7	; case 4
  1175  01DA  1903               	skipnz
  1176  01DB  29A6               	goto	l112
  1177  01DC  3A01               	xorlw	1	; case 5
  1178  01DD  1903               	skipnz
  1179  01DE  29AC               	goto	l113
  1180  01DF  3A03               	xorlw	3	; case 6
  1181  01E0  1903               	skipnz
  1182  01E1  29B2               	goto	l114
  1183  01E2  3A01               	xorlw	1	; case 7
  1184  01E3  1903               	skipnz
  1185  01E4  29B8               	goto	l115
  1186  01E5  29BE               	goto	l116
  1187  01E6                     l108:	
  1188                           
  1189                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
  1190  01E6  140F               	bsf	15,0	;volatile
  1191  01E7                     l117:	
  1192  01E7  0008               	return
  1193  01E8                     __end_of_initOsc:	
  1194                           
  1195                           	psect	text2
  1196  0202                     __ptext2:	
  1197 ;; *************** function _init *****************
  1198 ;; Defined at:
  1199 ;;		line 153 in file "Stepper_Motor.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		_I2C_Slave_Init
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _init
  1229  0202                     _init:	
  1230  0202                     l786:	
  1231                           ;incstack = 0
  1232                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1233                           
  1234                           
  1235                           ;Stepper_Motor.c: 154:     TRISA = 0;
  1236  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0204  0185               	clrf	5	;volatile
  1239                           
  1240                           ;Stepper_Motor.c: 155:     TRISB = 0;
  1241  0205  0186               	clrf	6	;volatile
  1242                           
  1243                           ;Stepper_Motor.c: 156:     TRISC = 0;
  1244  0206  0187               	clrf	7	;volatile
  1245                           
  1246                           ;Stepper_Motor.c: 157:     TRISD = 0;
  1247  0207  0188               	clrf	8	;volatile
  1248  0208                     l788:	
  1249                           
  1250                           ;Stepper_Motor.c: 158:     TRISE = 0b00000110;
  1251  0208  3006               	movlw	6
  1252  0209  0089               	movwf	9	;volatile
  1253  020A                     l790:	
  1254                           
  1255                           ;Stepper_Motor.c: 159:     ANSEL = 0;
  1256  020A  1683               	bsf	3,5	;RP0=1, select bank3
  1257  020B  1703               	bsf	3,6	;RP1=1, select bank3
  1258  020C  0188               	clrf	8	;volatile
  1259  020D                     l792:	
  1260                           
  1261                           ;Stepper_Motor.c: 160:     ANSELH = 0;
  1262  020D  0189               	clrf	9	;volatile
  1263  020E                     l794:	
  1264                           
  1265                           ;Stepper_Motor.c: 161:     I2C_Slave_Init(0x80);
  1266  020E  3080               	movlw	128
  1267  020F  120A  118A  21E8  120A  118A  	fcall	_I2C_Slave_Init
  1268  0214                     l101:	
  1269  0214  0008               	return
  1270  0215                     __end_of_init:	
  1271                           
  1272                           	psect	text3
  1273  01E8                     __ptext3:	
  1274 ;; *************** function _I2C_Slave_Init *****************
  1275 ;; Defined at:
  1276 ;;		line 85 in file "I2C.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  address         1    wreg     unsigned char 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  address         1    3[COMMON] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         1       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0
  1293 ;;      Totals:         1       0       0       0       0
  1294 ;;Total ram usage:        1 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    1
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_init
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _I2C_Slave_Init
  1306  01E8                     _I2C_Slave_Init:	
  1307                           
  1308                           ;incstack = 0
  1309                           ; Regs used in _I2C_Slave_Init: [wreg]
  1310                           ;I2C_Slave_Init@address stored from wreg
  1311  01E8  00F3               	movwf	I2C_Slave_Init@address
  1312  01E9                     l762:	
  1313                           
  1314                           ;I2C.c: 85: void I2C_Slave_Init(uint8_t address);I2C.c: 86: {;I2C.c: 87:     SSPADD = ad
      +                          dress;
  1315  01E9  0873               	movf	I2C_Slave_Init@address,w
  1316  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  1317  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  1318  01EC  0093               	movwf	19	;volatile
  1319                           
  1320                           ;I2C.c: 88:     SSPCON = 0x36;
  1321  01ED  3036               	movlw	54
  1322  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1323  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1324  01F0  0094               	movwf	20	;volatile
  1325                           
  1326                           ;I2C.c: 89:     SSPSTAT = 0x80;
  1327  01F1  3080               	movlw	128
  1328  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  1329  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  1330  01F4  0094               	movwf	20	;volatile
  1331                           
  1332                           ;I2C.c: 90:     SSPCON2 = 0x01;
  1333  01F5  3001               	movlw	1
  1334  01F6  0091               	movwf	17	;volatile
  1335  01F7                     l764:	
  1336                           
  1337                           ;I2C.c: 91:     TRISC3 = 1;
  1338  01F7  1587               	bsf	7,3	;volatile
  1339  01F8                     l766:	
  1340                           
  1341                           ;I2C.c: 92:     TRISC4 = 1;
  1342  01F8  1607               	bsf	7,4	;volatile
  1343  01F9                     l768:	
  1344                           
  1345                           ;I2C.c: 93:     GIE = 1;
  1346  01F9  178B               	bsf	11,7	;volatile
  1347  01FA                     l770:	
  1348                           
  1349                           ;I2C.c: 94:     PEIE = 1;
  1350  01FA  170B               	bsf	11,6	;volatile
  1351  01FB                     l772:	
  1352                           
  1353                           ;I2C.c: 95:     SSPIF = 0;
  1354  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1355  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1356  01FD  118C               	bcf	12,3	;volatile
  1357  01FE                     l774:	
  1358                           
  1359                           ;I2C.c: 96:     SSPIE = 1;
  1360  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1361  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1362  0200  158C               	bsf	12,3	;volatile
  1363  0201                     l170:	
  1364  0201  0008               	return
  1365  0202                     __end_of_I2C_Slave_Init:	
  1366                           
  1367                           	psect	text4
  1368  0129                     __ptext4:	
  1369 ;; *************** function _isr *****************
  1370 ;; Defined at:
  1371 ;;		line 57 in file "Stepper_Motor.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          3       0       0       0       0
  1388 ;;      Totals:         3       0       0       0       0
  1389 ;;Total ram usage:        3 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		Interrupt level 1
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _isr
  1400  0129                     _isr:	
  1401  0129                     i1l800:	
  1402                           
  1403                           ;Stepper_Motor.c: 59:     if(PIR1bits.SSPIF == 1){
  1404  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1405  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1406  012B  1D8C               	btfss	12,3	;volatile
  1407  012C  292E               	goto	u3_21
  1408  012D  292F               	goto	u3_20
  1409  012E                     u3_21:	
  1410  012E  2985               	goto	i1l78
  1411  012F                     u3_20:	
  1412  012F                     i1l802:	
  1413                           
  1414                           ;Stepper_Motor.c: 61:             SSPCONbits.CKP = 0;
  1415  012F  1214               	bcf	20,4	;volatile
  1416                           
  1417                           ;Stepper_Motor.c: 63:             if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1418  0130  1B14               	btfsc	20,6	;volatile
  1419  0131  2933               	goto	u4_21
  1420  0132  2934               	goto	u4_20
  1421  0133                     u4_21:	
  1422  0133  2938               	goto	i1l806
  1423  0134                     u4_20:	
  1424  0134                     i1l804:	
  1425  0134  1F94               	btfss	20,7	;volatile
  1426  0135  2937               	goto	u5_21
  1427  0136  2938               	goto	u5_20
  1428  0137                     u5_21:	
  1429  0137  293F               	goto	i1l814
  1430  0138                     u5_20:	
  1431  0138                     i1l806:	
  1432                           
  1433                           ;Stepper_Motor.c: 64:                 z = SSPBUF;
  1434  0138  0813               	movf	19,w	;volatile
  1435  0139  00F0               	movwf	??_isr
  1436  013A  0870               	movf	??_isr,w
  1437  013B  00FD               	movwf	_z
  1438  013C                     i1l808:	
  1439                           
  1440                           ;Stepper_Motor.c: 65:                 SSPCONbits.SSPOV = 0;
  1441  013C  1314               	bcf	20,6	;volatile
  1442  013D                     i1l810:	
  1443                           
  1444                           ;Stepper_Motor.c: 66:                 SSPCONbits.WCOL = 0;
  1445  013D  1394               	bcf	20,7	;volatile
  1446  013E                     i1l812:	
  1447                           
  1448                           ;Stepper_Motor.c: 67:                 SSPCONbits.CKP = 1;
  1449  013E  1614               	bsf	20,4	;volatile
  1450  013F                     i1l814:	
  1451                           
  1452                           ;Stepper_Motor.c: 70:             if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1453  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1454  0140  1303               	bcf	3,6	;RP1=0, select bank1
  1455  0141  1A94               	btfsc	20,5	;volatile
  1456  0142  2944               	goto	u6_21
  1457  0143  2945               	goto	u6_20
  1458  0144                     u6_21:	
  1459  0144  2961               	goto	i1l69
  1460  0145                     u6_20:	
  1461  0145                     i1l816:	
  1462  0145  1914               	btfsc	20,2	;volatile
  1463  0146  2948               	goto	u7_21
  1464  0147  2949               	goto	u7_20
  1465  0148                     u7_21:	
  1466  0148  2961               	goto	i1l69
  1467  0149                     u7_20:	
  1468  0149                     i1l818:	
  1469                           
  1470                           ;Stepper_Motor.c: 71:                 z = SSPBUF;
  1471  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1472  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1473  014B  0813               	movf	19,w	;volatile
  1474  014C  00F0               	movwf	??_isr
  1475  014D  0870               	movf	??_isr,w
  1476  014E  00FD               	movwf	_z
  1477  014F                     i1l820:	
  1478                           
  1479                           ;Stepper_Motor.c: 72:                 PIR1bits.SSPIF = 0;
  1480  014F  118C               	bcf	12,3	;volatile
  1481  0150                     i1l822:	
  1482                           
  1483                           ;Stepper_Motor.c: 73:                 SSPCONbits.CKP = 1;
  1484  0150  1614               	bsf	20,4	;volatile
  1485  0151                     i1l70:	
  1486                           ;Stepper_Motor.c: 74:                 while(!SSPSTATbits.BF);
  1487                           
  1488  0151  1683               	bsf	3,5	;RP0=1, select bank1
  1489  0152  1303               	bcf	3,6	;RP1=0, select bank1
  1490  0153  1C14               	btfss	20,0	;volatile
  1491  0154  2956               	goto	u8_21
  1492  0155  2957               	goto	u8_20
  1493  0156                     u8_21:	
  1494  0156  2951               	goto	i1l70
  1495  0157                     u8_20:	
  1496  0157                     i1l824:	
  1497                           
  1498                           ;Stepper_Motor.c: 75:                 PORTD = SSPBUF;
  1499  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0159  0813               	movf	19,w	;volatile
  1502  015A  0088               	movwf	8	;volatile
  1503                           
  1504                           ;Stepper_Motor.c: 76:                 _delay((unsigned long)((250)*(8000000/4000000.0)))
      +                          ;
  1505  015B  30A6               	movlw	166
  1506  015C  00F0               	movwf	??_isr
  1507  015D                     u36_27:	
  1508  015D  0BF0               	decfsz	??_isr,f
  1509  015E  295D               	goto	u36_27
  1510  015F  0000               	nop
  1511                           
  1512                           ;Stepper_Motor.c: 78:             }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1513  0160  2982               	goto	i1l73
  1514  0161                     i1l69:	
  1515  0161  1A94               	btfsc	20,5	;volatile
  1516  0162  2964               	goto	u9_21
  1517  0163  2965               	goto	u9_20
  1518  0164                     u9_21:	
  1519  0164  2982               	goto	i1l73
  1520  0165                     u9_20:	
  1521  0165                     i1l826:	
  1522  0165  1D14               	btfss	20,2	;volatile
  1523  0166  2968               	goto	u10_21
  1524  0167  2969               	goto	u10_20
  1525  0168                     u10_21:	
  1526  0168  2982               	goto	i1l73
  1527  0169                     u10_20:	
  1528  0169                     i1l828:	
  1529                           
  1530                           ;Stepper_Motor.c: 79:                 z = SSPBUF;
  1531  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1532  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1533  016B  0813               	movf	19,w	;volatile
  1534  016C  00F0               	movwf	??_isr
  1535  016D  0870               	movf	??_isr,w
  1536  016E  00FD               	movwf	_z
  1537  016F                     i1l830:	
  1538                           
  1539                           ;Stepper_Motor.c: 80:                 BF = 0;
  1540  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0171  1014               	bcf	20,0	;volatile
  1543                           
  1544                           ;Stepper_Motor.c: 81:                 SSPBUF = estado;
  1545  0172  087C               	movf	_estado,w
  1546  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0175  0093               	movwf	19	;volatile
  1549  0176                     i1l832:	
  1550                           
  1551                           ;Stepper_Motor.c: 82:                 SSPCONbits.CKP = 1;
  1552  0176  1614               	bsf	20,4	;volatile
  1553                           
  1554                           ;Stepper_Motor.c: 83:                 _delay((unsigned long)((250)*(8000000/4000000.0)))
      +                          ;
  1555  0177  30A6               	movlw	166
  1556  0178  00F0               	movwf	??_isr
  1557  0179                     u37_27:	
  1558  0179  0BF0               	decfsz	??_isr,f
  1559  017A  2979               	goto	u37_27
  1560  017B  0000               	nop
  1561  017C                     i1l75:	
  1562                           ;Stepper_Motor.c: 84:                 while(SSPSTATbits.BF);
  1563                           
  1564  017C  1683               	bsf	3,5	;RP0=1, select bank1
  1565  017D  1303               	bcf	3,6	;RP1=0, select bank1
  1566  017E  1814               	btfsc	20,0	;volatile
  1567  017F  2981               	goto	u11_21
  1568  0180  2982               	goto	u11_20
  1569  0181                     u11_21:	
  1570  0181  297C               	goto	i1l75
  1571  0182                     u11_20:	
  1572  0182                     i1l73:	
  1573                           
  1574                           ;Stepper_Motor.c: 87:             PIR1bits.SSPIF = 0;
  1575  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0184  118C               	bcf	12,3	;volatile
  1578  0185                     i1l78:	
  1579  0185  0872               	movf	??_isr+2,w
  1580  0186  008A               	movwf	10
  1581  0187  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1582  0188  0083               	movwf	3
  1583  0189  0EFE               	swapf	btemp,f
  1584  018A  0E7E               	swapf	btemp,w
  1585  018B  0009               	retfie
  1586  018C                     __end_of_isr:	
  1587  007E                     btemp	set	126	;btemp
  1588  007E                     wtemp0	set	126
  1589                           
  1590                           	psect	intentry
  1591  0004                     __pintentry:	
  1592                           ;incstack = 0
  1593                           ; Regs used in _isr: [wreg]
  1594                           
  1595  0004                     interrupt_function:	
  1596  007E                     saved_w	set	btemp
  1597  0004  00FE               	movwf	btemp
  1598  0005  0E03               	swapf	3,w
  1599  0006  00F1               	movwf	??_isr+1
  1600  0007  080A               	movf	10,w
  1601  0008  00F2               	movwf	??_isr+2
  1602  0009  120A  118A  2929   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initOsc
    _init->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              6 COMMON     2     2      0
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _I2C_Slave_Init
   _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 18 20:50:57 2020

                       _j 0078                         _k 0079                         _m 007A  
                       _n 007B                         _z 007D               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                        l84 0124  
                      l85 009F                       l101 0214                       l110 019A  
                     l111 01A0                       l112 01A6                       l113 01AC  
                     l114 01B2                       l115 01B8                       l107 018E  
                     l116 01BE                       l108 01E6                       l117 01E7  
                     l109 0194                       l170 0201                       l840 002C  
                     l770 01FA                       l762 01E9                       l850 003B  
                     l842 002D                       l834 001E                       l772 01FB  
                     l764 01F7                       l780 01C4                       l844 002E  
                     l836 0024                       l774 01FE                       l766 01F8  
                     l790 020A                       l870 0099                       l862 003D  
                     l846 002F                       l838 0029                       l768 01F9  
                     l792 020D                       l776 018D                       l872 00A5  
                     l864 008B                       l856 003C                       l848 0036  
                     l794 020E                       l786 0202                       l890 0119  
                     l866 008F                       l788 0208                       l956 01CC  
                     l892 011D                       l884 00A7                       l868 0095  
                     l886 010F                       l878 00A6                       l888 0113  
                     _GIE 005F                       u120 0036                       u121 0035  
                     u130 003B                       u131 003A                       u140 0095  
                     u141 0094                       u150 009F                       u151 009E  
                     u160 00A5                       u161 00A4                       u170 0119  
                     u171 0118                       u307 00C9                       u227 0045  
                     u180 0123                       u181 0122                       u317 00D6  
                     u237 0052                       u327 00E3                       u247 005F  
                     u337 00F0                       u257 006C              __CFG_CPD$OFF 0000  
                     u347 00FD                       u267 0079                       u357 010A  
                     u277 0086                       u287 00AF                       u297 00BC  
                     _isr 0129              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    _PEIE 005E                      i1l70 0151                      i1l73 0182  
                    i1l75 017C                      i1l69 0161                      i1l78 0185  
                    u3_20 012F                      u3_21 012E                      u4_20 0134  
                    u4_21 0133                      u5_20 0138                      u5_21 0137  
                    u6_20 0145                      u6_21 0144                      u7_20 0149  
                    u7_21 0148                      u8_20 0157                      u8_21 0156  
                    u9_20 0165                      u9_21 0164              __CFG_WRT$OFF 0000  
                    _main 001E                      _init 0202                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0070  
                   ?_main 0070                     ?_init 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l800 0129                     i1l810 013D  
                   i1l802 012F                     i1l820 014F                     i1l812 013E  
                   i1l804 0134                     i1l830 016F                     i1l822 0150  
                   i1l814 013F                     i1l806 0138                     i1l832 0176  
                   i1l824 0157                     i1l816 0145                     i1l808 013C  
                   i1l826 0165                     i1l818 0149                     i1l828 0169  
                   u10_20 0169                     u10_21 0168                     u11_20 0182  
                   u11_21 0181                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     u36_27 015D  
                   u37_27 0179                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
         __end_of_initOsc 01E8            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0129              __end_of_init 0215  
                  ??_main 0076                    ??_init 0074                    _ANSELH 0189  
             initOsc@frec 0075                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000                    _estado 007C                 ??_initOsc 0073  
                  saved_w 007E   __end_of__initialization 001A            __pcstackCOMMON 0070  
 __size_of_I2C_Slave_Init 001A     I2C_Slave_Init@address 0073                __pbssBANK0 0020  
              __pmaintext 001E                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                   __ptext1 018C                   __ptext2 0202  
                 __ptext3 01E8                   __ptext4 0129                   _initOsc 018C  
            __size_of_isr 0063      end_of_initialization 001A                _move_servo 0020  
          _I2C_Slave_Init 01E8                 _PORTBbits 0006                 _PORTEbits 0009  
               _TRISCbits 0087    __end_of_I2C_Slave_Init 0202       start_initialization 000F  
             __end_of_isr 018C  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070  
             __pbssCOMMON 0078                 ___latbits 0002                  ?_initOsc 0070  
       interrupt_function 0004                  _PIR1bits 000C          __size_of_initOsc 005C  
           _sensor_signal 0022         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0073  
           __size_of_main 010B             __size_of_init 0013                  intlevel1 0000  
              _OSCCONbits 008F               _SSPCON2bits 0091                _SSPCONbits 0014  
