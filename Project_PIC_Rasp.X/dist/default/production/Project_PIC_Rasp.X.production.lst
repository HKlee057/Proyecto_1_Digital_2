

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 20 17:28:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  000B                     _INTCONbits	set	11
   449  0006                     _PORTB	set	6
   450  0019                     _TXREG	set	25
   451  001A                     _RCREG	set	26
   452  000C                     _PIR1bits	set	12
   453  0018                     _RCSTAbits	set	24
   454  0013                     _SSPBUF	set	19
   455  0014                     _SSPCON	set	20
   456  008C                     _PIE1bits	set	140
   457  0088                     _TRISDbits	set	136
   458  0088                     _TRISD	set	136
   459  0087                     _TRISC	set	135
   460  0086                     _TRISB	set	134
   461  0085                     _TRISA	set	133
   462  0098                     _TXSTAbits	set	152
   463  0099                     _SPBRG	set	153
   464  0094                     _SSPSTATbits	set	148
   465  0094                     _SSPSTAT	set	148
   466  008F                     _OSCCONbits	set	143
   467  043B                     _TRISC3	set	1083
   468  043D                     _TRISC5	set	1085
   469  0189                     _ANSELH	set	393
   470  0188                     _ANSEL	set	392
   471                           
   472                           ; #config settings
   473  0000                     
   474                           	psect	cinit
   475  000F                     start_initialization:	
   476  000F                     __initialization:	
   477                           
   478                           ; Clear objects allocated to COMMON
   479  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   480  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   481  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   482  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   483  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   484                           
   485                           ; Clear objects allocated to BANK0
   486  0014  1283               	bcf	3,5	;RP0=0, select bank0
   487  0015  1303               	bcf	3,6	;RP1=0, select bank0
   488  0016  01C0               	clrf	__pbssBANK0& (0+127)
   489  0017  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   490  0018                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493  0018                     __end_of__initialization:	
   494  0018  0183               	clrf	3
   495  0019  120A  118A  29A2   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	bssCOMMON
   498  0070                     __pbssCOMMON:	
   499  0070                     _S0:	
   500  0070                     	ds	1
   501  0071                     _RASPBERRY:	
   502  0071                     	ds	1
   503  0072                     _Sens_VIB:	
   504  0072                     	ds	1
   505  0073                     _Sens_MOV:	
   506  0073                     	ds	1
   507  0074                     _Sens_INT:	
   508  0074                     	ds	1
   509                           
   510                           	psect	bssBANK0
   511  0040                     __pbssBANK0:	
   512  0040                     _Sens_PESO:	
   513  0040                     	ds	1
   514  0041                     _Sens_TEMP:	
   515  0041                     	ds	1
   516                           
   517                           	psect	cstackCOMMON
   518  0075                     __pcstackCOMMON:	
   519  0075                     ?_init:	
   520  0075                     ?_initOsc:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0075                     ?_spiReceiveWait:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0075                     ??_spiReceiveWait:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0075                     ?_spiWrite:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0075                     ??_spiWrite:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0075                     ?_spiRead:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0075                     ??_spiRead:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0075                     ?_UART_Read:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0075                     ??_UART_Read:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0075                     ?_UART_Write:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0075                     ?_isr:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0075                     ?_main:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0075                     spiWrite@dat:	
   557                           ; 1 bytes @ 0x0
   558                           
   559                           
   560                           ; 1 bytes @ 0x0
   561  0075                     	ds	1
   562  0076                     ??_isr:	
   563                           
   564                           ; 1 bytes @ 0x1
   565  0076                     	ds	3
   566  0079                     ??_spiInit:	
   567  0079                     ??_UART_Write:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0079                     ??___aldiv:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0079                     initOsc@frec:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0079                     spiInit@sType:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0079                     UART_Write@data:	
   580                           ; 1 bytes @ 0x4
   581                           
   582                           
   583                           ; 1 bytes @ 0x4
   584  0079                     	ds	1
   585  007A                     ??_init:	
   586                           
   587                           	psect	cstackBANK0
   588  0020                     __pcstackBANK0:	
   589                           ; 1 bytes @ 0x5
   590                           
   591  0020                     ??_initOsc:	
   592  0020                     ?_spiInit:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0020                     ?___aldiv:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0020                     spiInit@sDataSample:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0020                     ___aldiv@divisor:	
   602                           ; 1 bytes @ 0x0
   603                           
   604                           
   605                           ; 4 bytes @ 0x0
   606  0020                     	ds	1
   607  0021                     spiInit@sClockIdle:	
   608                           
   609                           ; 1 bytes @ 0x1
   610  0021                     	ds	1
   611  0022                     spiInit@sTransmitEdge:	
   612                           
   613                           ; 1 bytes @ 0x2
   614  0022                     	ds	2
   615  0024                     ___aldiv@dividend:	
   616                           
   617                           ; 4 bytes @ 0x4
   618  0024                     	ds	4
   619  0028                     ___aldiv@counter:	
   620                           
   621                           ; 1 bytes @ 0x8
   622  0028                     	ds	1
   623  0029                     ___aldiv@sign:	
   624                           
   625                           ; 1 bytes @ 0x9
   626  0029                     	ds	1
   627  002A                     ___aldiv@quotient:	
   628                           
   629                           ; 4 bytes @ 0xA
   630  002A                     	ds	4
   631  002E                     ?_UART_Init:	
   632  002E                     UART_Init@baudrate:	
   633                           ; 1 bytes @ 0xE
   634                           
   635                           
   636                           ; 4 bytes @ 0xE
   637  002E                     	ds	4
   638  0032                     ??_UART_Init:	
   639                           
   640                           ; 1 bytes @ 0x12
   641  0032                     	ds	12
   642  003E                     ??_main:	
   643                           
   644                           ; 1 bytes @ 0x1E
   645  003E                     	ds	2
   646                           
   647                           	psect	maintext
   648  01A2                     __pmaintext:	
   649 ;;
   650 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   651 ;;
   652 ;; *************** function _main *****************
   653 ;; Defined at:
   654 ;;		line 134 in file "Slave_PIC_Rasp.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : B00/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       2       0       0       0
   671 ;;      Totals:         0       2       0       0       0
   672 ;;Total ram usage:        2 bytes
   673 ;; Hardware stack levels required when called:    5
   674 ;; This function calls:
   675 ;;		_UART_Init
   676 ;;		_UART_Write
   677 ;;		_init
   678 ;;		_initOsc
   679 ;; This function is called by:
   680 ;;		Startup code after reset
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _main
   686  01A2                     _main:	
   687  01A2                     l1367:	
   688                           ;incstack = 0
   689                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   690                           
   691                           
   692                           ;Slave_PIC_Rasp.c: 135:     initOsc(7);
   693  01A2  3007               	movlw	7
   694  01A3  120A  118A  2281  120A  118A  	fcall	_initOsc
   695  01A8                     l1369:	
   696                           
   697                           ;Slave_PIC_Rasp.c: 136:     init();
   698  01A8  120A  118A  22DF  120A  118A  	fcall	_init
   699  01AD                     l1371:	
   700                           
   701                           ;Slave_PIC_Rasp.c: 137:     UART_Init (9600);
   702  01AD  3000               	movlw	0
   703  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   704  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   705  01B0  00B1               	movwf	UART_Init@baudrate+3
   706  01B1  3000               	movlw	0
   707  01B2  00B0               	movwf	UART_Init@baudrate+2
   708  01B3  3025               	movlw	37
   709  01B4  00AF               	movwf	UART_Init@baudrate+1
   710  01B5  3080               	movlw	128
   711  01B6  00AE               	movwf	UART_Init@baudrate
   712  01B7  120A  118A  2218  120A  118A  	fcall	_UART_Init
   713  01BC                     l1373:	
   714                           
   715                           ;Slave_PIC_Rasp.c: 140:         PORTB = RASPBERRY;
   716  01BC  0871               	movf	_RASPBERRY,w
   717  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   718  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   719  01BF  0086               	movwf	6	;volatile
   720  01C0                     l1375:	
   721                           
   722                           ;Slave_PIC_Rasp.c: 141:         UART_Write(Sens_INT);
   723  01C0  0874               	movf	_Sens_INT,w
   724  01C1  120A  118A  231D  120A  118A  	fcall	_UART_Write
   725  01C6                     l1377:	
   726                           
   727                           ;Slave_PIC_Rasp.c: 142:         _delay((unsigned long)((1)*(8000000/4000.0)));
   728  01C6  3003               	movlw	3
   729  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   730  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   731  01C9  00BF               	movwf	??_main+1
   732  01CA  3097               	movlw	151
   733  01CB  00BE               	movwf	??_main
   734  01CC                     u637:	
   735  01CC  0BBE               	decfsz	??_main,f
   736  01CD  29CC               	goto	u637
   737  01CE  0BBF               	decfsz	??_main+1,f
   738  01CF  29CC               	goto	u637
   739  01D0                     l1379:	
   740                           
   741                           ;Slave_PIC_Rasp.c: 143:         UART_Write(Sens_MOV);
   742  01D0  0873               	movf	_Sens_MOV,w
   743  01D1  120A  118A  231D  120A  118A  	fcall	_UART_Write
   744  01D6                     l1381:	
   745                           
   746                           ;Slave_PIC_Rasp.c: 144:         _delay((unsigned long)((1)*(8000000/4000.0)));
   747  01D6  3003               	movlw	3
   748  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   749  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   750  01D9  00BF               	movwf	??_main+1
   751  01DA  3097               	movlw	151
   752  01DB  00BE               	movwf	??_main
   753  01DC                     u647:	
   754  01DC  0BBE               	decfsz	??_main,f
   755  01DD  29DC               	goto	u647
   756  01DE  0BBF               	decfsz	??_main+1,f
   757  01DF  29DC               	goto	u647
   758  01E0                     l1383:	
   759                           
   760                           ;Slave_PIC_Rasp.c: 145:         UART_Write(Sens_VIB);
   761  01E0  0872               	movf	_Sens_VIB,w
   762  01E1  120A  118A  231D  120A  118A  	fcall	_UART_Write
   763  01E6                     l1385:	
   764                           
   765                           ;Slave_PIC_Rasp.c: 146:         _delay((unsigned long)((1)*(8000000/4000.0)));
   766  01E6  3003               	movlw	3
   767  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   768  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   769  01E9  00BF               	movwf	??_main+1
   770  01EA  3097               	movlw	151
   771  01EB  00BE               	movwf	??_main
   772  01EC                     u657:	
   773  01EC  0BBE               	decfsz	??_main,f
   774  01ED  29EC               	goto	u657
   775  01EE  0BBF               	decfsz	??_main+1,f
   776  01EF  29EC               	goto	u657
   777  01F0                     l1387:	
   778                           
   779                           ;Slave_PIC_Rasp.c: 147:         UART_Write(Sens_TEMP);
   780  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   781  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   782  01F2  0841               	movf	_Sens_TEMP,w
   783  01F3  120A  118A  231D  120A  118A  	fcall	_UART_Write
   784  01F8                     l1389:	
   785                           
   786                           ;Slave_PIC_Rasp.c: 148:         _delay((unsigned long)((1)*(8000000/4000.0)));
   787  01F8  3003               	movlw	3
   788  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   789  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   790  01FB  00BF               	movwf	??_main+1
   791  01FC  3097               	movlw	151
   792  01FD  00BE               	movwf	??_main
   793  01FE                     u667:	
   794  01FE  0BBE               	decfsz	??_main,f
   795  01FF  29FE               	goto	u667
   796  0200  0BBF               	decfsz	??_main+1,f
   797  0201  29FE               	goto	u667
   798  0202                     l1391:	
   799                           
   800                           ;Slave_PIC_Rasp.c: 149:         UART_Write(Sens_PESO);
   801  0202  1283               	bcf	3,5	;RP0=0, select bank0
   802  0203  1303               	bcf	3,6	;RP1=0, select bank0
   803  0204  0840               	movf	_Sens_PESO,w
   804  0205  120A  118A  231D  120A  118A  	fcall	_UART_Write
   805  020A                     l1393:	
   806                           
   807                           ;Slave_PIC_Rasp.c: 150:         _delay((unsigned long)((1)*(8000000/4000.0)));
   808  020A  3003               	movlw	3
   809  020B  1283               	bcf	3,5	;RP0=0, select bank0
   810  020C  1303               	bcf	3,6	;RP1=0, select bank0
   811  020D  00BF               	movwf	??_main+1
   812  020E  3097               	movlw	151
   813  020F  00BE               	movwf	??_main
   814  0210                     u677:	
   815  0210  0BBE               	decfsz	??_main,f
   816  0211  2A10               	goto	u677
   817  0212  0BBF               	decfsz	??_main+1,f
   818  0213  2A10               	goto	u677
   819  0214  29BC               	goto	l1373
   820  0215  120A  118A  280C   	ljmp	start
   821  0218                     __end_of_main:	
   822                           
   823                           	psect	text1
   824  0281                     __ptext1:	
   825 ;; *************** function _initOsc *****************
   826 ;; Defined at:
   827 ;;		line 8 in file "../../Laboratorio_4/Laboratorio_4.X/Oscilador.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  frec            1    wreg     unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  frec            1    4[COMMON] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0
   843 ;;      Temps:          0       2       0       0       0
   844 ;;      Totals:         1       2       0       0       0
   845 ;;Total ram usage:        3 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    3
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _initOsc
   857  0281                     _initOsc:	
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   861                           ;initOsc@frec stored from wreg
   862  0281  00F9               	movwf	initOsc@frec
   863  0282                     l1315:	
   864                           
   865                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 9:     switch(frec){
   866  0282  2AB9               	goto	l1319
   867  0283                     l6:	
   868                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 10:         case 0:
   869                           
   870                           
   871                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   872  0283  1683               	bsf	3,5	;RP0=1, select bank1
   873  0284  1303               	bcf	3,6	;RP1=0, select bank1
   874  0285  120F               	bcf	15,4	;volatile
   875                           
   876                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   877  0286  128F               	bcf	15,5	;volatile
   878                           
   879                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   880  0287  130F               	bcf	15,6	;volatile
   881                           
   882                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 14:             break;
   883  0288  2ADD               	goto	l7
   884  0289                     l8:	
   885                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 15:         case 1:
   886                           
   887                           
   888                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   889  0289  1683               	bsf	3,5	;RP0=1, select bank1
   890  028A  1303               	bcf	3,6	;RP1=0, select bank1
   891  028B  160F               	bsf	15,4	;volatile
   892                           
   893                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   894  028C  128F               	bcf	15,5	;volatile
   895                           
   896                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   897  028D  130F               	bcf	15,6	;volatile
   898                           
   899                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 19:             break;
   900  028E  2ADD               	goto	l7
   901  028F                     l9:	
   902                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 20:         case 2:
   903                           
   904                           
   905                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
   906  028F  1683               	bsf	3,5	;RP0=1, select bank1
   907  0290  1303               	bcf	3,6	;RP1=0, select bank1
   908  0291  120F               	bcf	15,4	;volatile
   909                           
   910                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
   911  0292  168F               	bsf	15,5	;volatile
   912                           
   913                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   914  0293  130F               	bcf	15,6	;volatile
   915                           
   916                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 24:             break;
   917  0294  2ADD               	goto	l7
   918  0295                     l10:	
   919                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 25:         case 3:
   920                           
   921                           
   922                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
   923  0295  1683               	bsf	3,5	;RP0=1, select bank1
   924  0296  1303               	bcf	3,6	;RP1=0, select bank1
   925  0297  160F               	bsf	15,4	;volatile
   926                           
   927                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
   928  0298  168F               	bsf	15,5	;volatile
   929                           
   930                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   931  0299  130F               	bcf	15,6	;volatile
   932                           
   933                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 29:             break;
   934  029A  2ADD               	goto	l7
   935  029B                     l11:	
   936                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 30:         case 4:
   937                           
   938                           
   939                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
   940  029B  1683               	bsf	3,5	;RP0=1, select bank1
   941  029C  1303               	bcf	3,6	;RP1=0, select bank1
   942  029D  120F               	bcf	15,4	;volatile
   943                           
   944                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
   945  029E  128F               	bcf	15,5	;volatile
   946                           
   947                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
   948  029F  170F               	bsf	15,6	;volatile
   949                           
   950                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 34:             break;
   951  02A0  2ADD               	goto	l7
   952  02A1                     l12:	
   953                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 35:         case 5:
   954                           
   955                           
   956                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
   957  02A1  1683               	bsf	3,5	;RP0=1, select bank1
   958  02A2  1303               	bcf	3,6	;RP1=0, select bank1
   959  02A3  160F               	bsf	15,4	;volatile
   960                           
   961                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
   962  02A4  128F               	bcf	15,5	;volatile
   963                           
   964                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
   965  02A5  170F               	bsf	15,6	;volatile
   966                           
   967                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 39:             break;
   968  02A6  2ADD               	goto	l7
   969  02A7                     l13:	
   970                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 40:         case 6:
   971                           
   972                           
   973                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
   974  02A7  1683               	bsf	3,5	;RP0=1, select bank1
   975  02A8  1303               	bcf	3,6	;RP1=0, select bank1
   976  02A9  120F               	bcf	15,4	;volatile
   977                           
   978                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
   979  02AA  168F               	bsf	15,5	;volatile
   980                           
   981                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
   982  02AB  170F               	bsf	15,6	;volatile
   983                           
   984                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 44:             break;
   985  02AC  2ADD               	goto	l7
   986  02AD                     l14:	
   987                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 45:         case 7:
   988                           
   989                           
   990                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
   991  02AD  1683               	bsf	3,5	;RP0=1, select bank1
   992  02AE  1303               	bcf	3,6	;RP1=0, select bank1
   993  02AF  160F               	bsf	15,4	;volatile
   994                           
   995                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
   996  02B0  168F               	bsf	15,5	;volatile
   997                           
   998                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
   999  02B1  170F               	bsf	15,6	;volatile
  1000                           
  1001                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 49:             break;
  1002  02B2  2ADD               	goto	l7
  1003  02B3                     l15:	
  1004                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 50:         default:
  1005                           
  1006                           
  1007                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
  1008  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  1009  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  1010  02B5  120F               	bcf	15,4	;volatile
  1011                           
  1012                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
  1013  02B6  168F               	bsf	15,5	;volatile
  1014                           
  1015                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1016  02B7  170F               	bsf	15,6	;volatile
  1017                           
  1018                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 54:             break;
  1019  02B8  2ADD               	goto	l7
  1020  02B9                     l1319:	
  1021  02B9  0879               	movf	initOsc@frec,w
  1022  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1023  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1024  02BC  00A0               	movwf	??_initOsc
  1025  02BD  01A1               	clrf	??_initOsc+1
  1026                           
  1027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1028                           ; Switch size 1, requested type "simple"
  1029                           ; Number of cases is 1, Range of values is 0 to 0
  1030                           ; switch strategies available:
  1031                           ; Name         Instructions Cycles
  1032                           ; simple_byte            4     3 (average)
  1033                           ; direct_byte           11     8 (fixed)
  1034                           ; jumptable            260     6 (fixed)
  1035                           ;	Chosen strategy is simple_byte
  1036  02BE  0821               	movf	??_initOsc+1,w
  1037  02BF  3A00               	xorlw	0	; case 0
  1038  02C0  1903               	skipnz
  1039  02C1  2AC3               	goto	l1415
  1040  02C2  2AB3               	goto	l15
  1041  02C3                     l1415:	
  1042                           
  1043                           ; Switch size 1, requested type "simple"
  1044                           ; Number of cases is 8, Range of values is 0 to 7
  1045                           ; switch strategies available:
  1046                           ; Name         Instructions Cycles
  1047                           ; simple_byte           25    13 (average)
  1048                           ; direct_byte           32     8 (fixed)
  1049                           ; jumptable            260     6 (fixed)
  1050                           ;	Chosen strategy is simple_byte
  1051  02C3  0820               	movf	??_initOsc,w
  1052  02C4  3A00               	xorlw	0	; case 0
  1053  02C5  1903               	skipnz
  1054  02C6  2A83               	goto	l6
  1055  02C7  3A01               	xorlw	1	; case 1
  1056  02C8  1903               	skipnz
  1057  02C9  2A89               	goto	l8
  1058  02CA  3A03               	xorlw	3	; case 2
  1059  02CB  1903               	skipnz
  1060  02CC  2A8F               	goto	l9
  1061  02CD  3A01               	xorlw	1	; case 3
  1062  02CE  1903               	skipnz
  1063  02CF  2A95               	goto	l10
  1064  02D0  3A07               	xorlw	7	; case 4
  1065  02D1  1903               	skipnz
  1066  02D2  2A9B               	goto	l11
  1067  02D3  3A01               	xorlw	1	; case 5
  1068  02D4  1903               	skipnz
  1069  02D5  2AA1               	goto	l12
  1070  02D6  3A03               	xorlw	3	; case 6
  1071  02D7  1903               	skipnz
  1072  02D8  2AA7               	goto	l13
  1073  02D9  3A01               	xorlw	1	; case 7
  1074  02DA  1903               	skipnz
  1075  02DB  2AAD               	goto	l14
  1076  02DC  2AB3               	goto	l15
  1077  02DD                     l7:	
  1078                           
  1079                           ;../../Laboratorio_4/Laboratorio_4.X/Oscilador.c: 57:     OSCCONbits.SCS = 1;
  1080  02DD  140F               	bsf	15,0	;volatile
  1081  02DE                     l16:	
  1082  02DE  0008               	return
  1083  02DF                     __end_of_initOsc:	
  1084                           
  1085                           	psect	text2
  1086  02DF                     __ptext2:	
  1087 ;; *************** function _init *****************
  1088 ;; Defined at:
  1089 ;;		line 155 in file "Slave_PIC_Rasp.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    4
  1110 ;; This function calls:
  1111 ;;		_spiInit
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _init
  1119  02DF                     _init:	
  1120  02DF                     l1341:	
  1121                           ;incstack = 0
  1122                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1123                           
  1124                           
  1125                           ;Slave_PIC_Rasp.c: 156:     TRISA = 0;
  1126  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1127  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1128  02E1  0185               	clrf	5	;volatile
  1129                           
  1130                           ;Slave_PIC_Rasp.c: 157:     TRISB = 0;
  1131  02E2  0186               	clrf	6	;volatile
  1132  02E3                     l1343:	
  1133                           
  1134                           ;Slave_PIC_Rasp.c: 158:     TRISC = 0b11010000;
  1135  02E3  30D0               	movlw	208
  1136  02E4  0087               	movwf	7	;volatile
  1137  02E5                     l1345:	
  1138                           
  1139                           ;Slave_PIC_Rasp.c: 159:     TRISD = 0;
  1140  02E5  0188               	clrf	8	;volatile
  1141  02E6                     l1347:	
  1142                           
  1143                           ;Slave_PIC_Rasp.c: 160:     TRISDbits.TRISD1 = 0;
  1144  02E6  1088               	bcf	8,1	;volatile
  1145  02E7                     l1349:	
  1146                           
  1147                           ;Slave_PIC_Rasp.c: 161:     ANSEL = 0;
  1148  02E7  1683               	bsf	3,5	;RP0=1, select bank3
  1149  02E8  1703               	bsf	3,6	;RP1=1, select bank3
  1150  02E9  0188               	clrf	8	;volatile
  1151  02EA                     l1351:	
  1152                           
  1153                           ;Slave_PIC_Rasp.c: 162:     ANSELH = 0;
  1154  02EA  0189               	clrf	9	;volatile
  1155  02EB                     l1353:	
  1156                           
  1157                           ;Slave_PIC_Rasp.c: 163:     PIE1bits.RCIE = 1;
  1158  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1159  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1160  02ED  168C               	bsf	12,5	;volatile
  1161  02EE                     l1355:	
  1162                           
  1163                           ;Slave_PIC_Rasp.c: 164:     INTCONbits.PEIE = 1;
  1164  02EE  170B               	bsf	11,6	;volatile
  1165  02EF                     l1357:	
  1166                           
  1167                           ;Slave_PIC_Rasp.c: 165:     INTCONbits.GIE = 1;
  1168  02EF  178B               	bsf	11,7	;volatile
  1169  02F0                     l1359:	
  1170                           
  1171                           ;Slave_PIC_Rasp.c: 166:     PIE1bits.SSPIE = 1;
  1172  02F0  158C               	bsf	12,3	;volatile
  1173  02F1                     l1361:	
  1174                           
  1175                           ;Slave_PIC_Rasp.c: 167:     RASPBERRY = 0;
  1176  02F1  01F1               	clrf	_RASPBERRY
  1177  02F2                     l1363:	
  1178                           
  1179                           ;Slave_PIC_Rasp.c: 168:     S0 = 0;
  1180  02F2  01F0               	clrf	_S0
  1181  02F3                     l1365:	
  1182                           
  1183                           ;Slave_PIC_Rasp.c: 169:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1184  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1185  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1186  02F5  01A0               	clrf	spiInit@sDataSample
  1187  02F6  01A1               	clrf	spiInit@sClockIdle
  1188  02F7  01A2               	clrf	spiInit@sTransmitEdge
  1189  02F8  3025               	movlw	37
  1190  02F9  120A  118A  22FF  120A  118A  	fcall	_spiInit
  1191  02FE                     l159:	
  1192  02FE  0008               	return
  1193  02FF                     __end_of_init:	
  1194                           
  1195                           	psect	text3
  1196  02FF                     __ptext3:	
  1197 ;; *************** function _spiInit *****************
  1198 ;; Defined at:
  1199 ;;		line 10 in file "../../Laboratorio_4/Laboratorio_4.X/SPI.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  sType           1    wreg     enum E1264
  1202 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1203 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1204 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  sType           1    4[COMMON] enum E1264
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       3       0       0       0
  1217 ;;      Locals:         1       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         1       3       0       0       0
  1220 ;;Total ram usage:        4 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_init
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _spiInit
  1232  02FF                     _spiInit:	
  1233                           
  1234                           ;incstack = 0
  1235                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1236                           ;spiInit@sType stored from wreg
  1237  02FF  00F9               	movwf	spiInit@sType
  1238  0300                     l1305:	
  1239                           
  1240                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sa
      +                          mple sDataSample, Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../../Labo
      +                          ratorio_4/Laboratorio_4.X/SPI.c: 11: {;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 12:   
      +                            TRISC5 = 0;
  1241  0300  1683               	bsf	3,5	;RP0=1, select bank1
  1242  0301  1303               	bcf	3,6	;RP1=0, select bank1
  1243  0302  1287               	bcf	7,5	;volatile
  1244                           
  1245                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 13:     if(sType & 0b00000100)
  1246  0303  1D79               	btfss	spiInit@sType,2
  1247  0304  2B06               	goto	u591
  1248  0305  2B07               	goto	u590
  1249  0306                     u591:	
  1250  0306  2B0F               	goto	l1311
  1251  0307                     u590:	
  1252  0307                     l1307:	
  1253                           
  1254                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 14:     {;../../Laboratorio_4/Laboratorio_4.
      +                          X/SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1255  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0309  0822               	movf	spiInit@sTransmitEdge,w
  1258  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1259  030B  1303               	bcf	3,6	;RP1=0, select bank1
  1260  030C  0094               	movwf	20	;volatile
  1261  030D                     l1309:	
  1262                           
  1263                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 16:         TRISC3 = 1;
  1264  030D  1587               	bsf	7,3	;volatile
  1265                           
  1266                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 17:     }
  1267  030E  2B17               	goto	l32
  1268  030F                     l1311:	
  1269                           
  1270                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 19:     {;../../Laboratorio_4/Laboratorio_4.
      +                          X/SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1271  030F  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0310  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0311  0820               	movf	spiInit@sDataSample,w
  1274  0312  0422               	iorwf	spiInit@sTransmitEdge,w
  1275  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0314  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0315  0094               	movwf	20	;volatile
  1278  0316                     l1313:	
  1279                           
  1280                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 21:         TRISC3 = 0;
  1281  0316  1187               	bcf	7,3	;volatile
  1282  0317                     l32:	
  1283                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 22:     }
  1284                           
  1285                           
  1286                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 24:     SSPCON = sType | sClockIdle;
  1287  0317  0879               	movf	spiInit@sType,w
  1288  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1290  031A  0421               	iorwf	spiInit@sClockIdle,w
  1291  031B  0094               	movwf	20	;volatile
  1292  031C                     l33:	
  1293  031C  0008               	return
  1294  031D                     __end_of_spiInit:	
  1295                           
  1296                           	psect	text4
  1297  031D                     __ptext4:	
  1298 ;; *************** function _UART_Write *****************
  1299 ;; Defined at:
  1300 ;;		line 42 in file "UART.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  data            1    wreg     unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  data            1    4[COMMON] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1314 ;;      Params:         0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0
  1317 ;;      Totals:         1       0       0       0       0
  1318 ;;Total ram usage:        1 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    3
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           
  1329                           ;psect for function _UART_Write
  1330  031D                     _UART_Write:	
  1331                           
  1332                           ;incstack = 0
  1333                           ; Regs used in _UART_Write: [wreg]
  1334                           ;UART_Write@data stored from wreg
  1335  031D  00F9               	movwf	UART_Write@data
  1336  031E                     l1123:	
  1337  031E                     l72:	
  1338                           ;UART.c: 43:   while(!TXSTAbits.TRMT);
  1339                           
  1340  031E  1683               	bsf	3,5	;RP0=1, select bank1
  1341  031F  1303               	bcf	3,6	;RP1=0, select bank1
  1342  0320  1C98               	btfss	24,1	;volatile
  1343  0321  2B23               	goto	u461
  1344  0322  2B24               	goto	u460
  1345  0323                     u461:	
  1346  0323  2B1E               	goto	l72
  1347  0324                     u460:	
  1348  0324                     l1125:	
  1349                           
  1350                           ;UART.c: 44:   TXREG = data;
  1351  0324  0879               	movf	UART_Write@data,w
  1352  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0327  0099               	movwf	25	;volatile
  1355  0328                     l75:	
  1356  0328  0008               	return
  1357  0329                     __end_of_UART_Write:	
  1358                           
  1359                           	psect	text5
  1360  0218                     __ptext5:	
  1361 ;; *************** function _UART_Init *****************
  1362 ;; Defined at:
  1363 ;;		line 18 in file "UART.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  baudrate        4   14[BANK0 ] const long 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      unsigned char 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       4       0       0       0
  1378 ;;      Locals:         0       0       0       0       0
  1379 ;;      Temps:          0      12       0       0       0
  1380 ;;      Totals:         0      16       0       0       0
  1381 ;;Total ram usage:       16 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    4
  1384 ;; This function calls:
  1385 ;;		___aldiv
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _UART_Init
  1393  0218                     _UART_Init:	
  1394  0218                     l1325:	
  1395                           ;incstack = 0
  1396                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1397                           
  1398                           
  1399                           ;UART.c: 19:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1400  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1402  021A  082E               	movf	UART_Init@baudrate,w
  1403  021B  00B2               	movwf	??_UART_Init
  1404  021C  082F               	movf	UART_Init@baudrate+1,w
  1405  021D  00B3               	movwf	??_UART_Init+1
  1406  021E  0830               	movf	UART_Init@baudrate+2,w
  1407  021F  00B4               	movwf	??_UART_Init+2
  1408  0220  0831               	movf	UART_Init@baudrate+3,w
  1409  0221  00B5               	movwf	??_UART_Init+3
  1410  0222  3004               	movlw	4
  1411  0223                     u605:	
  1412  0223  1003               	clrc
  1413  0224  0DB2               	rlf	??_UART_Init,f
  1414  0225  0DB3               	rlf	??_UART_Init+1,f
  1415  0226  0DB4               	rlf	??_UART_Init+2,f
  1416  0227  0DB5               	rlf	??_UART_Init+3,f
  1417  0228                     u600:	
  1418  0228  3EFF               	addlw	-1
  1419  0229  1D03               	skipz
  1420  022A  2A23               	goto	u605
  1421  022B  0835               	movf	??_UART_Init+3,w
  1422  022C  00A3               	movwf	___aldiv@divisor+3
  1423  022D  0834               	movf	??_UART_Init+2,w
  1424  022E  00A2               	movwf	___aldiv@divisor+2
  1425  022F  0833               	movf	??_UART_Init+1,w
  1426  0230  00A1               	movwf	___aldiv@divisor+1
  1427  0231  0832               	movf	??_UART_Init,w
  1428  0232  00A0               	movwf	___aldiv@divisor
  1429  0233  082E               	movf	UART_Init@baudrate,w
  1430  0234  00B6               	movwf	??_UART_Init+4
  1431  0235  082F               	movf	UART_Init@baudrate+1,w
  1432  0236  00B7               	movwf	??_UART_Init+5
  1433  0237  0830               	movf	UART_Init@baudrate+2,w
  1434  0238  00B8               	movwf	??_UART_Init+6
  1435  0239  0831               	movf	UART_Init@baudrate+3,w
  1436  023A  00B9               	movwf	??_UART_Init+7
  1437  023B  3004               	movlw	4
  1438  023C                     u615:	
  1439  023C  1003               	clrc
  1440  023D  0DB6               	rlf	??_UART_Init+4,f
  1441  023E  0DB7               	rlf	??_UART_Init+5,f
  1442  023F  0DB8               	rlf	??_UART_Init+6,f
  1443  0240  0DB9               	rlf	??_UART_Init+7,f
  1444  0241                     u610:	
  1445  0241  3EFF               	addlw	-1
  1446  0242  1D03               	skipz
  1447  0243  2A3C               	goto	u615
  1448  0244  3000               	movlw	0
  1449  0245  00BA               	movwf	??_UART_Init+8
  1450  0246  3012               	movlw	18
  1451  0247  00BB               	movwf	??_UART_Init+9
  1452  0248  307A               	movlw	122
  1453  0249  00BC               	movwf	??_UART_Init+10
  1454  024A  3000               	movlw	0
  1455  024B  00BD               	movwf	??_UART_Init+11
  1456  024C  0836               	movf	??_UART_Init+4,w
  1457  024D  02BA               	subwf	??_UART_Init+8,f
  1458  024E  0837               	movf	??_UART_Init+5,w
  1459  024F  1C03               	skipc
  1460  0250  0F37               	incfsz	??_UART_Init+5,w
  1461  0251  2A53               	goto	u621
  1462  0252  2A54               	goto	u622
  1463  0253                     u621:	
  1464  0253  02BB               	subwf	??_UART_Init+9,f
  1465  0254                     u622:	
  1466  0254  0838               	movf	??_UART_Init+6,w
  1467  0255  1C03               	skipc
  1468  0256  0F38               	incfsz	??_UART_Init+6,w
  1469  0257  2A59               	goto	u623
  1470  0258  2A5A               	goto	u624
  1471  0259                     u623:	
  1472  0259  02BC               	subwf	??_UART_Init+10,f
  1473  025A                     u624:	
  1474  025A  0839               	movf	??_UART_Init+7,w
  1475  025B  1C03               	skipc
  1476  025C  0F39               	incfsz	??_UART_Init+7,w
  1477  025D  2A5F               	goto	u625
  1478  025E  2A60               	goto	u626
  1479  025F                     u625:	
  1480  025F  02BD               	subwf	??_UART_Init+11,f
  1481  0260                     u626:	
  1482  0260  083D               	movf	??_UART_Init+11,w
  1483  0261  00A7               	movwf	___aldiv@dividend+3
  1484  0262  083C               	movf	??_UART_Init+10,w
  1485  0263  00A6               	movwf	___aldiv@dividend+2
  1486  0264  083B               	movf	??_UART_Init+9,w
  1487  0265  00A5               	movwf	___aldiv@dividend+1
  1488  0266  083A               	movf	??_UART_Init+8,w
  1489  0267  00A4               	movwf	___aldiv@dividend
  1490  0268  120A  118A  2105  120A  118A  	fcall	___aldiv
  1491  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1492  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1493  026F  0820               	movf	?___aldiv,w
  1494  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1495  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1496  0272  0099               	movwf	25	;volatile
  1497  0273                     l1327:	
  1498                           
  1499                           ;UART.c: 20:     TXSTAbits.BRGH = 1;
  1500  0273  1518               	bsf	24,2	;volatile
  1501  0274                     l1329:	
  1502                           
  1503                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  1504  0274  1218               	bcf	24,4	;volatile
  1505  0275                     l1331:	
  1506                           
  1507                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1508  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0277  1798               	bsf	24,7	;volatile
  1511  0278                     l1333:	
  1512                           
  1513                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  1514  0278  1618               	bsf	24,4	;volatile
  1515  0279                     l1335:	
  1516                           
  1517                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  1518  0279  1683               	bsf	3,5	;RP0=1, select bank1
  1519  027A  1303               	bcf	3,6	;RP1=0, select bank1
  1520  027B  1698               	bsf	24,5	;volatile
  1521  027C                     l1337:	
  1522                           
  1523                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  1524  027C  1318               	bcf	24,6	;volatile
  1525  027D                     l1339:	
  1526                           
  1527                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1528  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1529  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1530  027F  1318               	bcf	24,6	;volatile
  1531  0280                     l65:	
  1532  0280  0008               	return
  1533  0281                     __end_of_UART_Init:	
  1534                           
  1535                           	psect	text6
  1536  0105                     __ptext6:	
  1537 ;; *************** function ___aldiv *****************
  1538 ;; Defined at:
  1539 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  divisor         4    0[BANK0 ] long 
  1542 ;;  dividend        4    4[BANK0 ] long 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  quotient        4   10[BANK0 ] long 
  1545 ;;  sign            1    9[BANK0 ] unsigned char 
  1546 ;;  counter         1    8[BANK0 ] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  4    0[BANK0 ] long 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       8       0       0       0
  1557 ;;      Locals:         0       6       0       0       0
  1558 ;;      Temps:          1       0       0       0       0
  1559 ;;      Totals:         1      14       0       0       0
  1560 ;;Total ram usage:       15 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    3
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_UART_Init
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function ___aldiv
  1572  0105                     ___aldiv:	
  1573  0105                     l1043:	
  1574                           ;incstack = 0
  1575                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1576                           
  1577  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0107  01A9               	clrf	___aldiv@sign
  1580  0108                     l1045:	
  1581  0108  1FA3               	btfss	___aldiv@divisor+3,7
  1582  0109  290B               	goto	u321
  1583  010A  290C               	goto	u320
  1584  010B                     u321:	
  1585  010B  2919               	goto	l310
  1586  010C                     u320:	
  1587  010C                     l1047:	
  1588  010C  09A0               	comf	___aldiv@divisor,f
  1589  010D  09A1               	comf	___aldiv@divisor+1,f
  1590  010E  09A2               	comf	___aldiv@divisor+2,f
  1591  010F  09A3               	comf	___aldiv@divisor+3,f
  1592  0110  0AA0               	incf	___aldiv@divisor,f
  1593  0111  1903               	skipnz
  1594  0112  0AA1               	incf	___aldiv@divisor+1,f
  1595  0113  1903               	skipnz
  1596  0114  0AA2               	incf	___aldiv@divisor+2,f
  1597  0115  1903               	skipnz
  1598  0116  0AA3               	incf	___aldiv@divisor+3,f
  1599  0117  01A9               	clrf	___aldiv@sign
  1600  0118  0AA9               	incf	___aldiv@sign,f
  1601  0119                     l310:	
  1602  0119  1FA7               	btfss	___aldiv@dividend+3,7
  1603  011A  291C               	goto	u331
  1604  011B  291D               	goto	u330
  1605  011C                     u331:	
  1606  011C  292C               	goto	l1053
  1607  011D                     u330:	
  1608  011D                     l1049:	
  1609  011D  09A4               	comf	___aldiv@dividend,f
  1610  011E  09A5               	comf	___aldiv@dividend+1,f
  1611  011F  09A6               	comf	___aldiv@dividend+2,f
  1612  0120  09A7               	comf	___aldiv@dividend+3,f
  1613  0121  0AA4               	incf	___aldiv@dividend,f
  1614  0122  1903               	skipnz
  1615  0123  0AA5               	incf	___aldiv@dividend+1,f
  1616  0124  1903               	skipnz
  1617  0125  0AA6               	incf	___aldiv@dividend+2,f
  1618  0126  1903               	skipnz
  1619  0127  0AA7               	incf	___aldiv@dividend+3,f
  1620  0128                     l1051:	
  1621  0128  3001               	movlw	1
  1622  0129  00F9               	movwf	??___aldiv
  1623  012A  0879               	movf	??___aldiv,w
  1624  012B  06A9               	xorwf	___aldiv@sign,f
  1625  012C                     l1053:	
  1626  012C  3000               	movlw	0
  1627  012D  00AD               	movwf	___aldiv@quotient+3
  1628  012E  3000               	movlw	0
  1629  012F  00AC               	movwf	___aldiv@quotient+2
  1630  0130  3000               	movlw	0
  1631  0131  00AB               	movwf	___aldiv@quotient+1
  1632  0132  3000               	movlw	0
  1633  0133  00AA               	movwf	___aldiv@quotient
  1634  0134                     l1055:	
  1635  0134  0823               	movf	___aldiv@divisor+3,w
  1636  0135  0422               	iorwf	___aldiv@divisor+2,w
  1637  0136  0421               	iorwf	___aldiv@divisor+1,w
  1638  0137  0420               	iorwf	___aldiv@divisor,w
  1639  0138  1903               	skipnz
  1640  0139  293B               	goto	u341
  1641  013A  293C               	goto	u340
  1642  013B                     u341:	
  1643  013B  2989               	goto	l1075
  1644  013C                     u340:	
  1645  013C                     l1057:	
  1646  013C  01A8               	clrf	___aldiv@counter
  1647  013D  0AA8               	incf	___aldiv@counter,f
  1648  013E  294C               	goto	l1061
  1649  013F                     l1059:	
  1650  013F  3001               	movlw	1
  1651  0140  00F9               	movwf	??___aldiv
  1652  0141                     u355:	
  1653  0141  1003               	clrc
  1654  0142  0DA0               	rlf	___aldiv@divisor,f
  1655  0143  0DA1               	rlf	___aldiv@divisor+1,f
  1656  0144  0DA2               	rlf	___aldiv@divisor+2,f
  1657  0145  0DA3               	rlf	___aldiv@divisor+3,f
  1658  0146  0BF9               	decfsz	??___aldiv,f
  1659  0147  2941               	goto	u355
  1660  0148  3001               	movlw	1
  1661  0149  00F9               	movwf	??___aldiv
  1662  014A  0879               	movf	??___aldiv,w
  1663  014B  07A8               	addwf	___aldiv@counter,f
  1664  014C                     l1061:	
  1665  014C  1FA3               	btfss	___aldiv@divisor+3,7
  1666  014D  294F               	goto	u361
  1667  014E  2950               	goto	u360
  1668  014F                     u361:	
  1669  014F  293F               	goto	l1059
  1670  0150                     u360:	
  1671  0150                     l1063:	
  1672  0150  3001               	movlw	1
  1673  0151  00F9               	movwf	??___aldiv
  1674  0152                     u375:	
  1675  0152  1003               	clrc
  1676  0153  0DAA               	rlf	___aldiv@quotient,f
  1677  0154  0DAB               	rlf	___aldiv@quotient+1,f
  1678  0155  0DAC               	rlf	___aldiv@quotient+2,f
  1679  0156  0DAD               	rlf	___aldiv@quotient+3,f
  1680  0157  0BF9               	decfsz	??___aldiv,f
  1681  0158  2952               	goto	u375
  1682  0159                     l1065:	
  1683  0159  0823               	movf	___aldiv@divisor+3,w
  1684  015A  0227               	subwf	___aldiv@dividend+3,w
  1685  015B  1D03               	skipz
  1686  015C  2967               	goto	u385
  1687  015D  0822               	movf	___aldiv@divisor+2,w
  1688  015E  0226               	subwf	___aldiv@dividend+2,w
  1689  015F  1D03               	skipz
  1690  0160  2967               	goto	u385
  1691  0161  0821               	movf	___aldiv@divisor+1,w
  1692  0162  0225               	subwf	___aldiv@dividend+1,w
  1693  0163  1D03               	skipz
  1694  0164  2967               	goto	u385
  1695  0165  0820               	movf	___aldiv@divisor,w
  1696  0166  0224               	subwf	___aldiv@dividend,w
  1697  0167                     u385:	
  1698  0167  1C03               	skipc
  1699  0168  296A               	goto	u381
  1700  0169  296B               	goto	u380
  1701  016A                     u381:	
  1702  016A  297A               	goto	l1071
  1703  016B                     u380:	
  1704  016B                     l1067:	
  1705  016B  0820               	movf	___aldiv@divisor,w
  1706  016C  02A4               	subwf	___aldiv@dividend,f
  1707  016D  0821               	movf	___aldiv@divisor+1,w
  1708  016E  1C03               	skipc
  1709  016F  0F21               	incfsz	___aldiv@divisor+1,w
  1710  0170  02A5               	subwf	___aldiv@dividend+1,f
  1711  0171  0822               	movf	___aldiv@divisor+2,w
  1712  0172  1C03               	skipc
  1713  0173  0F22               	incfsz	___aldiv@divisor+2,w
  1714  0174  02A6               	subwf	___aldiv@dividend+2,f
  1715  0175  0823               	movf	___aldiv@divisor+3,w
  1716  0176  1C03               	skipc
  1717  0177  0F23               	incfsz	___aldiv@divisor+3,w
  1718  0178  02A7               	subwf	___aldiv@dividend+3,f
  1719  0179                     l1069:	
  1720  0179  142A               	bsf	___aldiv@quotient,0
  1721  017A                     l1071:	
  1722  017A  3001               	movlw	1
  1723  017B                     u395:	
  1724  017B  1003               	clrc
  1725  017C  0CA3               	rrf	___aldiv@divisor+3,f
  1726  017D  0CA2               	rrf	___aldiv@divisor+2,f
  1727  017E  0CA1               	rrf	___aldiv@divisor+1,f
  1728  017F  0CA0               	rrf	___aldiv@divisor,f
  1729  0180  3EFF               	addlw	-1
  1730  0181  1D03               	skipz
  1731  0182  297B               	goto	u395
  1732  0183                     l1073:	
  1733  0183  3001               	movlw	1
  1734  0184  02A8               	subwf	___aldiv@counter,f
  1735  0185  1D03               	btfss	3,2
  1736  0186  2988               	goto	u401
  1737  0187  2989               	goto	u400
  1738  0188                     u401:	
  1739  0188  2950               	goto	l1063
  1740  0189                     u400:	
  1741  0189                     l1075:	
  1742  0189  0829               	movf	___aldiv@sign,w
  1743  018A  1903               	btfsc	3,2
  1744  018B  298D               	goto	u411
  1745  018C  298E               	goto	u410
  1746  018D                     u411:	
  1747  018D  2999               	goto	l1079
  1748  018E                     u410:	
  1749  018E                     l1077:	
  1750  018E  09AA               	comf	___aldiv@quotient,f
  1751  018F  09AB               	comf	___aldiv@quotient+1,f
  1752  0190  09AC               	comf	___aldiv@quotient+2,f
  1753  0191  09AD               	comf	___aldiv@quotient+3,f
  1754  0192  0AAA               	incf	___aldiv@quotient,f
  1755  0193  1903               	skipnz
  1756  0194  0AAB               	incf	___aldiv@quotient+1,f
  1757  0195  1903               	skipnz
  1758  0196  0AAC               	incf	___aldiv@quotient+2,f
  1759  0197  1903               	skipnz
  1760  0198  0AAD               	incf	___aldiv@quotient+3,f
  1761  0199                     l1079:	
  1762  0199  082D               	movf	___aldiv@quotient+3,w
  1763  019A  00A3               	movwf	?___aldiv+3
  1764  019B  082C               	movf	___aldiv@quotient+2,w
  1765  019C  00A2               	movwf	?___aldiv+2
  1766  019D  082B               	movf	___aldiv@quotient+1,w
  1767  019E  00A1               	movwf	?___aldiv+1
  1768  019F  082A               	movf	___aldiv@quotient,w
  1769  01A0  00A0               	movwf	?___aldiv
  1770  01A1                     l320:	
  1771  01A1  0008               	return
  1772  01A2                     __end_of___aldiv:	
  1773                           
  1774                           	psect	text7
  1775  001C                     __ptext7:	
  1776 ;; *************** function _isr *****************
  1777 ;; Defined at:
  1778 ;;		line 54 in file "Slave_PIC_Rasp.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0
  1794 ;;      Temps:          3       0       0       0       0
  1795 ;;      Totals:         3       0       0       0       0
  1796 ;;Total ram usage:        3 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    2
  1799 ;; This function calls:
  1800 ;;		_UART_Read
  1801 ;;		_spiRead
  1802 ;;		_spiWrite
  1803 ;; This function is called by:
  1804 ;;		Interrupt level 1
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _isr
  1810  001C                     _isr:	
  1811  001C                     i1l1153:	
  1812                           
  1813                           ;Slave_PIC_Rasp.c: 57:     if(PIR1bits.SSPIF==1){
  1814  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1815  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1816  001E  1D8C               	btfss	12,3	;volatile
  1817  001F  2821               	goto	u47_21
  1818  0020  2822               	goto	u47_20
  1819  0021                     u47_21:	
  1820  0021  2892               	goto	i1l136
  1821  0022                     u47_20:	
  1822  0022                     i1l1155:	
  1823                           
  1824                           ;Slave_PIC_Rasp.c: 58:         RASPBERRY = spiRead();
  1825  0022  120A  118A  2329  120A  118A  	fcall	_spiRead
  1826  0027  00F6               	movwf	??_isr
  1827  0028  0876               	movf	??_isr,w
  1828  0029  00F1               	movwf	_RASPBERRY
  1829  002A                     i1l1157:	
  1830                           
  1831                           ;Slave_PIC_Rasp.c: 60:         if(RASPBERRY == 0){
  1832  002A  0871               	movf	_RASPBERRY,w
  1833  002B  1D03               	btfss	3,2
  1834  002C  282E               	goto	u48_21
  1835  002D  282F               	goto	u48_20
  1836  002E                     u48_21:	
  1837  002E  283C               	goto	i1l1167
  1838  002F                     u48_20:	
  1839  002F                     i1l1159:	
  1840                           
  1841                           ;Slave_PIC_Rasp.c: 61:             spiWrite(Sens_INT);
  1842  002F  0874               	movf	_Sens_INT,w
  1843  0030  120A  118A  2341  120A  118A  	fcall	_spiWrite
  1844  0035                     i1l1161:	
  1845                           
  1846                           ;Slave_PIC_Rasp.c: 62:             SSPSTATbits.BF= 0;
  1847  0035  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0036  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0037  1014               	bcf	20,0	;volatile
  1850  0038                     i1l1163:	
  1851                           
  1852                           ;Slave_PIC_Rasp.c: 63:             PIR1bits.SSPIF = 0;
  1853  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1855  003A  118C               	bcf	12,3	;volatile
  1856  003B  28FE               	goto	i1l138
  1857  003C                     i1l1167:	
  1858                           
  1859                           ;Slave_PIC_Rasp.c: 66:         if(RASPBERRY == 1){
  1860  003C  0371               	decf	_RASPBERRY,w
  1861  003D  1D03               	btfss	3,2
  1862  003E  2840               	goto	u49_21
  1863  003F  2841               	goto	u49_20
  1864  0040                     u49_21:	
  1865  0040  284E               	goto	i1l1177
  1866  0041                     u49_20:	
  1867  0041                     i1l1169:	
  1868                           
  1869                           ;Slave_PIC_Rasp.c: 67:             spiWrite(Sens_MOV);
  1870  0041  0873               	movf	_Sens_MOV,w
  1871  0042  120A  118A  2341  120A  118A  	fcall	_spiWrite
  1872  0047                     i1l1171:	
  1873                           
  1874                           ;Slave_PIC_Rasp.c: 68:             SSPSTATbits.BF= 0;
  1875  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0048  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0049  1014               	bcf	20,0	;volatile
  1878  004A                     i1l1173:	
  1879                           
  1880                           ;Slave_PIC_Rasp.c: 69:             PIR1bits.SSPIF = 0;
  1881  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1882  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1883  004C  118C               	bcf	12,3	;volatile
  1884  004D  28FE               	goto	i1l138
  1885  004E                     i1l1177:	
  1886                           
  1887                           ;Slave_PIC_Rasp.c: 72:         if(RASPBERRY == 2){
  1888  004E  3002               	movlw	2
  1889  004F  0671               	xorwf	_RASPBERRY,w
  1890  0050  1D03               	btfss	3,2
  1891  0051  2853               	goto	u50_21
  1892  0052  2854               	goto	u50_20
  1893  0053                     u50_21:	
  1894  0053  2861               	goto	i1l1187
  1895  0054                     u50_20:	
  1896  0054                     i1l1179:	
  1897                           
  1898                           ;Slave_PIC_Rasp.c: 73:             spiWrite(Sens_VIB);
  1899  0054  0872               	movf	_Sens_VIB,w
  1900  0055  120A  118A  2341  120A  118A  	fcall	_spiWrite
  1901  005A                     i1l1181:	
  1902                           
  1903                           ;Slave_PIC_Rasp.c: 74:             SSPSTATbits.BF= 0;
  1904  005A  1683               	bsf	3,5	;RP0=1, select bank1
  1905  005B  1303               	bcf	3,6	;RP1=0, select bank1
  1906  005C  1014               	bcf	20,0	;volatile
  1907  005D                     i1l1183:	
  1908                           
  1909                           ;Slave_PIC_Rasp.c: 75:             PIR1bits.SSPIF = 0;
  1910  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1911  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1912  005F  118C               	bcf	12,3	;volatile
  1913  0060  28FE               	goto	i1l138
  1914  0061                     i1l1187:	
  1915                           
  1916                           ;Slave_PIC_Rasp.c: 78:         if(RASPBERRY == 3){
  1917  0061  3003               	movlw	3
  1918  0062  0671               	xorwf	_RASPBERRY,w
  1919  0063  1D03               	btfss	3,2
  1920  0064  2866               	goto	u51_21
  1921  0065  2867               	goto	u51_20
  1922  0066                     u51_21:	
  1923  0066  2876               	goto	i1l1197
  1924  0067                     u51_20:	
  1925  0067                     i1l1189:	
  1926                           
  1927                           ;Slave_PIC_Rasp.c: 79:             spiWrite(Sens_TEMP);
  1928  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0069  0841               	movf	_Sens_TEMP,w
  1931  006A  120A  118A  2341  120A  118A  	fcall	_spiWrite
  1932  006F                     i1l1191:	
  1933                           
  1934                           ;Slave_PIC_Rasp.c: 80:             SSPSTATbits.BF= 0;
  1935  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0070  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0071  1014               	bcf	20,0	;volatile
  1938  0072                     i1l1193:	
  1939                           
  1940                           ;Slave_PIC_Rasp.c: 81:             PIR1bits.SSPIF = 0;
  1941  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0074  118C               	bcf	12,3	;volatile
  1944  0075  28FE               	goto	i1l138
  1945  0076                     i1l1197:	
  1946                           
  1947                           ;Slave_PIC_Rasp.c: 84:         if(RASPBERRY == 4){
  1948  0076  3004               	movlw	4
  1949  0077  0671               	xorwf	_RASPBERRY,w
  1950  0078  1D03               	btfss	3,2
  1951  0079  287B               	goto	u52_21
  1952  007A  287C               	goto	u52_20
  1953  007B                     u52_21:	
  1954  007B  288B               	goto	i1l142
  1955  007C                     u52_20:	
  1956  007C                     i1l1199:	
  1957                           
  1958                           ;Slave_PIC_Rasp.c: 85:             spiWrite(Sens_PESO);
  1959  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1960  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1961  007E  0840               	movf	_Sens_PESO,w
  1962  007F  120A  118A  2341  120A  118A  	fcall	_spiWrite
  1963  0084                     i1l1201:	
  1964                           
  1965                           ;Slave_PIC_Rasp.c: 86:             SSPSTATbits.BF= 0;
  1966  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1968  0086  1014               	bcf	20,0	;volatile
  1969  0087                     i1l1203:	
  1970                           
  1971                           ;Slave_PIC_Rasp.c: 87:             PIR1bits.SSPIF = 0;
  1972  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0089  118C               	bcf	12,3	;volatile
  1975  008A  28FE               	goto	i1l138
  1976  008B                     i1l142:	
  1977                           ;Slave_PIC_Rasp.c: 89:         }
  1978                           
  1979                           
  1980                           ;Slave_PIC_Rasp.c: 91:           SSPSTATbits.BF= 0;
  1981  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1982  008C  1303               	bcf	3,6	;RP1=0, select bank1
  1983  008D  1014               	bcf	20,0	;volatile
  1984                           
  1985                           ;Slave_PIC_Rasp.c: 92:           PIR1bits.SSPIF = 0;
  1986  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1987  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0090  118C               	bcf	12,3	;volatile
  1989                           
  1990                           ;Slave_PIC_Rasp.c: 93:         return;
  1991  0091  28FE               	goto	i1l138
  1992  0092                     i1l136:	
  1993                           ;Slave_PIC_Rasp.c: 94:     }
  1994                           
  1995                           
  1996                           ;Slave_PIC_Rasp.c: 95:     if(PIR1bits.RCIF == 1){
  1997  0092  1E8C               	btfss	12,5	;volatile
  1998  0093  2895               	goto	u53_21
  1999  0094  2896               	goto	u53_20
  2000  0095                     u53_21:	
  2001  0095  28FD               	goto	i1l143
  2002  0096                     u53_20:	
  2003  0096                     i1l1207:	
  2004                           
  2005                           ;Slave_PIC_Rasp.c: 96:         if(S0 == 0){
  2006  0096  0870               	movf	_S0,w
  2007  0097  1D03               	btfss	3,2
  2008  0098  289A               	goto	u54_21
  2009  0099  289B               	goto	u54_20
  2010  009A                     u54_21:	
  2011  009A  28A9               	goto	i1l1217
  2012  009B                     u54_20:	
  2013  009B                     i1l1209:	
  2014                           
  2015                           ;Slave_PIC_Rasp.c: 97:         Sens_INT= UART_Read();
  2016  009B  120A  118A  2332  120A  118A  	fcall	_UART_Read
  2017  00A0  00F6               	movwf	??_isr
  2018  00A1  0876               	movf	??_isr,w
  2019  00A2  00F4               	movwf	_Sens_INT
  2020  00A3                     i1l1211:	
  2021                           
  2022                           ;Slave_PIC_Rasp.c: 98:         PIR1bits.RCIF = 0;
  2023  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2024  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2025  00A5  128C               	bcf	12,5	;volatile
  2026  00A6                     i1l1213:	
  2027                           
  2028                           ;Slave_PIC_Rasp.c: 99:         S0=1;
  2029  00A6  01F0               	clrf	_S0
  2030  00A7  0AF0               	incf	_S0,f
  2031  00A8  28FE               	goto	i1l138
  2032  00A9                     i1l1217:	
  2033                           
  2034                           ;Slave_PIC_Rasp.c: 102:          if(S0 == 1){
  2035  00A9  0370               	decf	_S0,w
  2036  00AA  1D03               	btfss	3,2
  2037  00AB  28AD               	goto	u55_21
  2038  00AC  28AE               	goto	u55_20
  2039  00AD                     u55_21:	
  2040  00AD  28BE               	goto	i1l1227
  2041  00AE                     u55_20:	
  2042  00AE                     i1l1219:	
  2043                           
  2044                           ;Slave_PIC_Rasp.c: 103:         Sens_MOV= UART_Read();
  2045  00AE  120A  118A  2332  120A  118A  	fcall	_UART_Read
  2046  00B3  00F6               	movwf	??_isr
  2047  00B4  0876               	movf	??_isr,w
  2048  00B5  00F3               	movwf	_Sens_MOV
  2049  00B6                     i1l1221:	
  2050                           
  2051                           ;Slave_PIC_Rasp.c: 104:         PIR1bits.RCIF = 0;
  2052  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2053  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2054  00B8  128C               	bcf	12,5	;volatile
  2055  00B9                     i1l1223:	
  2056                           
  2057                           ;Slave_PIC_Rasp.c: 105:         S0=2;
  2058  00B9  3002               	movlw	2
  2059  00BA  00F6               	movwf	??_isr
  2060  00BB  0876               	movf	??_isr,w
  2061  00BC  00F0               	movwf	_S0
  2062  00BD  28FE               	goto	i1l138
  2063  00BE                     i1l1227:	
  2064                           
  2065                           ;Slave_PIC_Rasp.c: 108:          if(S0 == 2){
  2066  00BE  3002               	movlw	2
  2067  00BF  0670               	xorwf	_S0,w
  2068  00C0  1D03               	btfss	3,2
  2069  00C1  28C3               	goto	u56_21
  2070  00C2  28C4               	goto	u56_20
  2071  00C3                     u56_21:	
  2072  00C3  28D4               	goto	i1l1237
  2073  00C4                     u56_20:	
  2074  00C4                     i1l1229:	
  2075                           
  2076                           ;Slave_PIC_Rasp.c: 109:         Sens_VIB = UART_Read();
  2077  00C4  120A  118A  2332  120A  118A  	fcall	_UART_Read
  2078  00C9  00F6               	movwf	??_isr
  2079  00CA  0876               	movf	??_isr,w
  2080  00CB  00F2               	movwf	_Sens_VIB
  2081  00CC                     i1l1231:	
  2082                           
  2083                           ;Slave_PIC_Rasp.c: 110:         PIR1bits.RCIF = 0;
  2084  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2085  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2086  00CE  128C               	bcf	12,5	;volatile
  2087  00CF                     i1l1233:	
  2088                           
  2089                           ;Slave_PIC_Rasp.c: 111:         S0=3;
  2090  00CF  3003               	movlw	3
  2091  00D0  00F6               	movwf	??_isr
  2092  00D1  0876               	movf	??_isr,w
  2093  00D2  00F0               	movwf	_S0
  2094  00D3  28FE               	goto	i1l138
  2095  00D4                     i1l1237:	
  2096                           
  2097                           ;Slave_PIC_Rasp.c: 114:          if(S0 == 3){
  2098  00D4  3003               	movlw	3
  2099  00D5  0670               	xorwf	_S0,w
  2100  00D6  1D03               	btfss	3,2
  2101  00D7  28D9               	goto	u57_21
  2102  00D8  28DA               	goto	u57_20
  2103  00D9                     u57_21:	
  2104  00D9  28EA               	goto	i1l1247
  2105  00DA                     u57_20:	
  2106  00DA                     i1l1239:	
  2107                           
  2108                           ;Slave_PIC_Rasp.c: 115:         Sens_TEMP = UART_Read();
  2109  00DA  120A  118A  2332  120A  118A  	fcall	_UART_Read
  2110  00DF  00F6               	movwf	??_isr
  2111  00E0  0876               	movf	??_isr,w
  2112  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2113  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2114  00E3  00C1               	movwf	_Sens_TEMP
  2115  00E4                     i1l1241:	
  2116                           
  2117                           ;Slave_PIC_Rasp.c: 116:         PIR1bits.RCIF = 0;
  2118  00E4  128C               	bcf	12,5	;volatile
  2119  00E5                     i1l1243:	
  2120                           
  2121                           ;Slave_PIC_Rasp.c: 117:         S0=4;
  2122  00E5  3004               	movlw	4
  2123  00E6  00F6               	movwf	??_isr
  2124  00E7  0876               	movf	??_isr,w
  2125  00E8  00F0               	movwf	_S0
  2126  00E9  28FE               	goto	i1l138
  2127  00EA                     i1l1247:	
  2128                           
  2129                           ;Slave_PIC_Rasp.c: 120:          if(S0 == 4){
  2130  00EA  3004               	movlw	4
  2131  00EB  0670               	xorwf	_S0,w
  2132  00EC  1D03               	btfss	3,2
  2133  00ED  28EF               	goto	u58_21
  2134  00EE  28F0               	goto	u58_20
  2135  00EF                     u58_21:	
  2136  00EF  28FD               	goto	i1l143
  2137  00F0                     u58_20:	
  2138  00F0                     i1l1249:	
  2139                           
  2140                           ;Slave_PIC_Rasp.c: 121:         Sens_PESO= UART_Read();
  2141  00F0  120A  118A  2332  120A  118A  	fcall	_UART_Read
  2142  00F5  00F6               	movwf	??_isr
  2143  00F6  0876               	movf	??_isr,w
  2144  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2145  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2146  00F9  00C0               	movwf	_Sens_PESO
  2147  00FA                     i1l1251:	
  2148                           
  2149                           ;Slave_PIC_Rasp.c: 122:         PIR1bits.RCIF = 0;
  2150  00FA  128C               	bcf	12,5	;volatile
  2151  00FB                     i1l1253:	
  2152                           
  2153                           ;Slave_PIC_Rasp.c: 123:         S0 = 0;
  2154  00FB  01F0               	clrf	_S0
  2155  00FC  28FE               	goto	i1l138
  2156  00FD                     i1l143:	
  2157                           ;Slave_PIC_Rasp.c: 126:     }
  2158                           
  2159                           
  2160                           ;Slave_PIC_Rasp.c: 127:     PIR1bits.RCIF = 0;
  2161  00FD  128C               	bcf	12,5	;volatile
  2162  00FE                     i1l138:	
  2163                           ;Slave_PIC_Rasp.c: 128:     return;
  2164                           
  2165  00FE  0878               	movf	??_isr+2,w
  2166  00FF  008A               	movwf	10
  2167  0100  0E77               	swapf	(??_isr+1)^(0+4294967168),w
  2168  0101  0083               	movwf	3
  2169  0102  0EFE               	swapf	btemp,f
  2170  0103  0E7E               	swapf	btemp,w
  2171  0104  0009               	retfie
  2172  0105                     __end_of_isr:	
  2173                           
  2174                           	psect	intentry
  2175  0004                     __pintentry:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2178                           
  2179  0004                     interrupt_function:	
  2180  007E                     saved_w	set	btemp
  2181  0004  00FE               	movwf	btemp
  2182  0005  0E03               	swapf	3,w
  2183  0006  00F7               	movwf	??_isr+1
  2184  0007  080A               	movf	10,w
  2185  0008  00F8               	movwf	??_isr+2
  2186  0009  120A  118A  281C   	ljmp	_isr
  2187                           
  2188                           	psect	text8
  2189  0341                     __ptext8:	
  2190 ;; *************** function _spiWrite *****************
  2191 ;; Defined at:
  2192 ;;		line 32 in file "../../Laboratorio_4/Laboratorio_4.X/SPI.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  dat             1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  dat             1    0[COMMON] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         1       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         1       0       0       0       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_isr
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _spiWrite
  2221  0341                     _spiWrite:	
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _spiWrite: [wreg]
  2225                           ;spiWrite@dat stored from wreg
  2226  0341  00F5               	movwf	spiWrite@dat
  2227  0342                     i1l1093:	
  2228                           
  2229                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 32: void spiWrite(char dat);../../Laboratori
      +                          o_4/Laboratorio_4.X/SPI.c: 33: {;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 34:     SSPB
      +                          UF = dat;
  2230  0342  0875               	movf	spiWrite@dat,w
  2231  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0345  0093               	movwf	19	;volatile
  2234  0346                     i1l42:	
  2235  0346  0008               	return
  2236  0347                     __end_of_spiWrite:	
  2237                           
  2238                           	psect	text9
  2239  0329                     __ptext9:	
  2240 ;; *************** function _spiRead *****************
  2241 ;; Defined at:
  2242 ;;		line 45 in file "../../Laboratorio_4/Laboratorio_4.X/SPI.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      unsigned char 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    1
  2263 ;; This function calls:
  2264 ;;		_spiReceiveWait
  2265 ;; This function is called by:
  2266 ;;		_isr
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _spiRead
  2272  0329                     _spiRead:	
  2273  0329                     i1l1095:	
  2274                           ;incstack = 0
  2275                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2276                           
  2277                           
  2278                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 47:     spiReceiveWait();
  2279  0329  120A  118A  233A  120A  118A  	fcall	_spiReceiveWait
  2280  032E                     i1l1097:	
  2281                           
  2282                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 48:     return(SSPBUF);
  2283  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2284  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0330  0813               	movf	19,w	;volatile
  2286  0331                     i1l50:	
  2287  0331  0008               	return
  2288  0332                     __end_of_spiRead:	
  2289                           
  2290                           	psect	text10
  2291  033A                     __ptext10:	
  2292 ;; *************** function _spiReceiveWait *****************
  2293 ;; Defined at:
  2294 ;;		line 27 in file "../../Laboratorio_4/Laboratorio_4.X/SPI.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		None
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0
  2311 ;;      Totals:         0       0       0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_spiRead
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _spiReceiveWait
  2323  033A                     _spiReceiveWait:	
  2324  033A                     i1l1041:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _spiReceiveWait: []
  2327                           
  2328  033A                     i1l36:	
  2329                           ;../../Laboratorio_4/Laboratorio_4.X/SPI.c: 29:     while ( !SSPSTATbits.BF );
  2330                           
  2331  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2332  033B  1303               	bcf	3,6	;RP1=0, select bank1
  2333  033C  1C14               	btfss	20,0	;volatile
  2334  033D  2B3F               	goto	u31_21
  2335  033E  2B40               	goto	u31_20
  2336  033F                     u31_21:	
  2337  033F  2B3A               	goto	i1l36
  2338  0340                     u31_20:	
  2339  0340                     i1l39:	
  2340  0340  0008               	return
  2341  0341                     __end_of_spiReceiveWait:	
  2342                           
  2343                           	psect	text11
  2344  0332                     __ptext11:	
  2345 ;; *************** function _UART_Read *****************
  2346 ;; Defined at:
  2347 ;;		line 34 in file "UART.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      unsigned char 
  2354 ;; Registers used:
  2355 ;;		wreg
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_isr
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _UART_Read
  2376  0332                     _UART_Read:	
  2377  0332                     i1l1117:	
  2378                           ;incstack = 0
  2379                           ; Regs used in _UART_Read: [wreg]
  2380                           
  2381                           
  2382                           ;UART.c: 35:     if(PIR1bits.RCIF==1){
  2383  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0334  1E8C               	btfss	12,5	;volatile
  2386  0335  2B37               	goto	u45_21
  2387  0336  2B38               	goto	u45_20
  2388  0337                     u45_21:	
  2389  0337  2B39               	goto	i1l69
  2390  0338                     u45_20:	
  2391  0338                     i1l1119:	
  2392                           
  2393                           ;UART.c: 36:         return RCREG;
  2394  0338  081A               	movf	26,w	;volatile
  2395  0339                     i1l69:	
  2396  0339  0008               	return
  2397  033A                     __end_of_UART_Read:	
  2398  007E                     btemp	set	126	;btemp
  2399  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write
    _main->_initOsc
    _init->_spiInit
    _UART_Init->___aldiv

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_UART_Init
    _init->_spiInit
    _UART_Init->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1113
                                             30 BANK0      2     2      0
                          _UART_Init
                         _UART_Write
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16    12      4     604
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                          _UART_Read
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write
   _init
     _spiInit
   _initOsc

 _isr (ROOT)
   _UART_Read
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 20 17:28:10 2020

                       l6 0283                         l7 02DD                         l8 0289  
                       l9 028F               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l10 0295                        l11 029B                        l12 02A1  
                      l13 02A7                        l14 02AD                        l15 02B3  
                      l32 0317                        l16 02DE                        l33 031C  
                      l72 031E                        l65 0280                        _S0 0070  
                      l75 0328                       l310 0119                       l320 01A1  
                     l159 02FE                       u400 0189                       u320 010C  
                     u401 0188                       u321 010B                       u410 018E  
                     u330 011D                       u411 018D                       u331 011C  
                     u340 013C                       u341 013B                       u360 0150  
                     u600 0228                       u361 014F                       u610 0241  
            __CFG_CPD$OFF 0000                       u355 0141                       u380 016B  
                     u460 0324                       u381 016A                       u621 0253  
                     u605 0223                       u461 0323                       u622 0254  
                     u375 0152                       u623 0259                       u615 023C  
                     u624 025A                       u385 0167                       u625 025F  
                     u626 0260                       u395 017B                       u637 01CC  
                     u590 0307                       u591 0306                       u647 01DC  
                     u657 01EC                       u667 01FE                       u677 0210  
                     _isr 001C              __CFG_LVP$OFF 0000                      l1051 0128  
                    l1043 0105                      l1123 031E                      l1061 014C  
                    l1053 012C                      l1045 0108                      l1125 0324  
                    l1071 017A                      l1063 0150                      l1055 0134  
                    l1047 010C                      l1311 030F                      l1073 0183  
                    l1065 0159                      l1057 013C                      l1049 011D  
                    l1313 0316                      l1305 0300                      l1067 016B  
                    l1059 013F                      l1075 0189                      l1331 0275  
                    l1307 0307                      l1315 0282                      l1077 018E  
                    l1069 0179                      l1333 0278                      l1325 0218  
                    l1309 030D                      l1341 02DF                      l1079 0199  
                    l1335 0279                      l1327 0273                      l1351 02EA  
                    l1343 02E3                      l1415 02C3                      l1319 02B9  
                    l1337 027C                      l1329 0274                      l1361 02F1  
                    l1353 02EB                      l1345 02E5                      l1339 027D  
                    l1363 02F2                      l1355 02EE                      l1347 02E6  
                    l1371 01AD                      l1365 02F3                      l1357 02EF  
                    l1349 02E7                      l1381 01D6                      l1373 01BC  
                    l1359 02F0                      l1391 0202                      l1383 01E0  
                    l1375 01C0                      l1367 01A2                      l1393 020A  
                    l1385 01E6                      l1377 01C6                      l1369 01A8  
                    l1387 01F0                      l1379 01D0                      l1389 01F8  
                    ?_isr 0075                      i1l50 0331                      i1l42 0346  
                    i1l36 033A                      i1l39 0340                      i1l69 0339  
            __CFG_WRT$OFF 0000                      _main 01A2                      _init 02DF  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0076           __end_of___aldiv 01A2                     ?_main 0075  
                   ?_init 0075             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l142 008B                     i1l143 00FD                     i1l136 0092  
                   i1l138 00FE                     _RCREG 001A                     u31_20 0340  
                   u31_21 033F                     u50_20 0054                     u50_21 0053  
                   _SPBRG 0099                     u51_20 0067                     u51_21 0066  
                   _PORTB 0006                     u52_20 007C                     u52_21 007B  
                   u45_20 0338                     u53_20 0096                     u45_21 0337  
                   u53_21 0095                     u54_20 009B                     u54_21 009A  
                   u55_20 00AE                     u47_20 0022                     u55_21 00AD  
                   u47_21 0021                     u56_20 00C4                     u48_20 002F  
                   u56_21 00C3                     u48_21 002E                     u57_20 00DA  
                   u49_20 0041                     u57_21 00D9                     u49_21 0040  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     u58_20 00F0                     u58_21 00EF  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000               ?_UART_Write 0075  
      __size_of_UART_Init 0069        __size_of_UART_Read 0008           __end_of_initOsc 02DF  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 031D  
         __end_of_spiRead 0332                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0218  
            __end_of_init 02FF                    ??_main 003E                    ??_init 007A  
                  _ANSELH 0189                    i1l1041 033A                    i1l1201 0084  
                  i1l1211 00A3                    i1l1203 0087                    i1l1117 0332  
                  i1l1221 00B6                    i1l1213 00A6                    i1l1119 0338  
                  i1l1231 00CC                    i1l1223 00B9                    i1l1207 0096  
                  i1l1241 00E4                    i1l1233 00CF                    i1l1209 009B  
                  i1l1217 00A9                    i1l1161 0035                    i1l1153 001C  
                  i1l1251 00FA                    i1l1243 00E5                    i1l1219 00AE  
                  i1l1227 00BE                    i1l1171 0047                    i1l1163 0038  
                  i1l1155 0022                    i1l1093 0342                    i1l1253 00FB  
                  i1l1229 00C4                    i1l1237 00D4                    i1l1181 005A  
                  i1l1173 004A                    i1l1157 002A                    i1l1095 0329  
                  i1l1239 00DA                    i1l1247 00EA                    i1l1191 006F  
                  i1l1183 005D                    i1l1159 002F                    i1l1167 003C  
                  i1l1097 032E                    i1l1249 00F0                    i1l1193 0072  
                  i1l1169 0041                    i1l1177 004E                    i1l1179 0054  
                  i1l1187 0061                    i1l1189 0067                    i1l1197 0076  
                  i1l1199 007C               initOsc@frec 0079                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000         __end_of_UART_Init 0281         __end_of_UART_Read 033A  
     __size_of_UART_Write 000C                 ??___aldiv 0079                 ??_initOsc 0020  
                  saved_w 007E          __end_of_spiWrite 0347                 ??_spiInit 0079  
               ??_spiRead 0075   __end_of__initialization 0018            __pcstackCOMMON 0075  
              __pbssBANK0 0040                __pmaintext 01A2                __pintentry 0004  
 __size_of_spiReceiveWait 0007              ??_UART_Write 0079                   _SSPSTAT 0094  
               ?_spiWrite 0075                   ___aldiv 0105        __end_of_UART_Write 0329  
                 __ptext1 0281                   __ptext2 02DF                   __ptext3 02FF  
                 __ptext4 031D                   __ptext5 0218                   __ptext6 0105  
                 __ptext7 001C                   __ptext8 0341                   __ptext9 0329  
                 _initOsc 0281              __size_of_isr 00E9          ___aldiv@dividend 0024  
                 _spiInit 02FF                   _spiRead 0329      end_of_initialization 0018  
               _RASPBERRY 0071                 _RCSTAbits 0018          ___aldiv@quotient 002A  
              ??_spiWrite 0075                 _UART_Init 0218                 _UART_Read 0332  
          UART_Write@data 0079                 _TRISDbits 0088               spiWrite@dat 0075  
               _TXSTAbits 0098            _spiReceiveWait 033A                ?_UART_Init 002E  
              ?_UART_Read 0075       start_initialization 000F               __end_of_isr 0105  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 _Sens_PESO 0040                 _Sens_TEMP 0041  
  __end_of_spiReceiveWait 0341               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 0020           ?_spiReceiveWait 0075                  ?___aldiv 0020  
             ??_UART_Init 0032               ??_UART_Read 0075         __size_of_spiWrite 0006  
                ?_initOsc 0075                  ?_spiInit 0020                  ?_spiRead 0075  
         ___aldiv@divisor 0020      spiInit@sTransmitEdge 0022         interrupt_function 0004  
         ___aldiv@counter 0028                  _PIE1bits 008C        spiInit@sDataSample 0020  
                _PIR1bits 000C         UART_Init@baudrate 002E                  _Sens_INT 0074  
                _Sens_MOV 0073                  _Sens_VIB 0072          __size_of___aldiv 009D  
        __size_of_initOsc 005E                  __ptext10 033A                  __ptext11 0332  
        __size_of_spiInit 001E          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0076             __size_of_init 0020                  _spiWrite 0341  
            spiInit@sType 0079         spiInit@sClockIdle 0021                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0075                _OSCCONbits 008F  
            ___aldiv@sign 0029                _UART_Write 031D  
