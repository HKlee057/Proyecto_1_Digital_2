

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 08 21:08:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0012                     _T2CONbits	set	18
   205  000C                     _PIR1bits	set	12
   206  0015                     _CCPR1L	set	21
   207  0017                     _CCP1CONbits	set	23
   208  000B                     _INTCONbits	set	11
   209  0005                     _PORTA	set	5
   210  0008                     _PORTD	set	8
   211  0006                     _PORTB	set	6
   212  0006                     _PORTBbits	set	6
   213  0061                     _TMR2IF	set	97
   214  0092                     _PR2	set	146
   215  0087                     _TRISCbits	set	135
   216  0096                     _IOCBbits	set	150
   217  0088                     _TRISD	set	136
   218  0086                     _TRISB	set	134
   219  0085                     _TRISA	set	133
   220  008F                     _OSCCONbits	set	143
   221  0189                     _ANSELH	set	393
   222  0188                     _ANSEL	set	392
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  07FA                     start_initialization:	
   228  07FA                     __initialization:	
   229                           
   230                           ; Clear objects allocated to COMMON
   231  07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   232  07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:	
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2FB2   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0070                     __pbssCOMMON:	
   242  0070                     _push2:	
   243  0070                     	ds	1
   244  0071                     _push1:	
   245  0071                     	ds	1
   246                           
   247                           	psect	cstackCOMMON
   248  0072                     __pcstackCOMMON:	
   249  0072                     ?_set_up:	
   250  0072                     ??_set_up:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0072                     ?_PWM_setup:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0072                     ??_PWM_setup:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0072                     ?_final_deg:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0072                     ??_final_deg:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0072                     ?_zero_deg:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0072                     ??_zero_deg:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0072                     ?_main:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0072                     ??_main:	
   275                           ; 1 bytes @ 0x0
   276                           
   277                           
   278                           ; 1 bytes @ 0x0
   279  0072                     	ds	1
   280                           
   281                           	psect	maintext
   282  07B2                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 52 in file "Servo_Motor_PWM.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          1       0       0       0       0
   305 ;;      Totals:         1       0       0       0       0
   306 ;;Total ram usage:        1 bytes
   307 ;; Hardware stack levels required when called:    1
   308 ;; This function calls:
   309 ;;		_PWM_setup
   310 ;;		_final_deg
   311 ;;		_set_up
   312 ;;		_zero_deg
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           
   319                           ;psect for function _main
   320  07B2                     _main:	
   321  07B2                     l733:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   324                           
   325                           
   326                           ;Servo_Motor_PWM.c: 53:     set_up();
   327  07B2  120A  118A  2793  120A  118A  	fcall	_set_up
   328                           
   329                           ;Servo_Motor_PWM.c: 54:     PWM_setup();
   330  07B7  120A  118A  2775  120A  118A  	fcall	_PWM_setup
   331  07BC                     l735:	
   332                           
   333                           ;Servo_Motor_PWM.c: 58:         if (PORTBbits.RB0 == 1){
   334  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   335  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   336  07BE  1C06               	btfss	6,0	;volatile
   337  07BF  2FC1               	goto	u21
   338  07C0  2FC2               	goto	u20
   339  07C1                     u21:	
   340  07C1  2FC4               	goto	l739
   341  07C2                     u20:	
   342  07C2                     l737:	
   343                           
   344                           ;Servo_Motor_PWM.c: 59:             push1=1;
   345  07C2  01F1               	clrf	_push1
   346  07C3  0AF1               	incf	_push1,f
   347  07C4                     l739:	
   348                           
   349                           ;Servo_Motor_PWM.c: 61:         if (push1==1 && PORTBbits.RB0==0){
   350  07C4  0371               	decf	_push1,w
   351  07C5  1D03               	btfss	3,2
   352  07C6  2FC8               	goto	u31
   353  07C7  2FC9               	goto	u30
   354  07C8                     u31:	
   355  07C8  2FD9               	goto	l747
   356  07C9                     u30:	
   357  07C9                     l741:	
   358  07C9  1806               	btfsc	6,0	;volatile
   359  07CA  2FCC               	goto	u41
   360  07CB  2FCD               	goto	u40
   361  07CC                     u41:	
   362  07CC  2FD9               	goto	l747
   363  07CD                     u40:	
   364  07CD                     l743:	
   365                           
   366                           ;Servo_Motor_PWM.c: 62:             _delay((unsigned long)((10)*(500000/4000.0)));
   367  07CD  30F9               	movlw	249
   368  07CE  00F2               	movwf	??_main
   369  07CF                     u87:	
   370  07CF  2FD0               	nop2
   371  07D0  0BF2               	decfsz	??_main,f
   372  07D1  2FCF               	goto	u87
   373  07D2  2FD3               	nop2
   374  07D3  2FD4               	nop2
   375  07D4                     l745:	
   376                           
   377                           ;Servo_Motor_PWM.c: 63:             final_deg();
   378  07D4  120A  118A  2767  120A  118A  	fcall	_final_deg
   379  07D9                     l747:	
   380                           
   381                           ;Servo_Motor_PWM.c: 67:         if (PORTBbits.RB1 == 1){
   382  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   383  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   384  07DB  1C86               	btfss	6,1	;volatile
   385  07DC  2FDE               	goto	u51
   386  07DD  2FDF               	goto	u50
   387  07DE                     u51:	
   388  07DE  2FE1               	goto	l751
   389  07DF                     u50:	
   390  07DF                     l749:	
   391                           
   392                           ;Servo_Motor_PWM.c: 68:             push2=1;
   393  07DF  01F0               	clrf	_push2
   394  07E0  0AF0               	incf	_push2,f
   395  07E1                     l751:	
   396                           
   397                           ;Servo_Motor_PWM.c: 70:         if (push2==1 && PORTBbits.RB1==0){
   398  07E1  0370               	decf	_push2,w
   399  07E2  1D03               	btfss	3,2
   400  07E3  2FE5               	goto	u61
   401  07E4  2FE6               	goto	u60
   402  07E5                     u61:	
   403  07E5  2FBC               	goto	l735
   404  07E6                     u60:	
   405  07E6                     l753:	
   406  07E6  1886               	btfsc	6,1	;volatile
   407  07E7  2FE9               	goto	u71
   408  07E8  2FEA               	goto	u70
   409  07E9                     u71:	
   410  07E9  2FBC               	goto	l735
   411  07EA                     u70:	
   412  07EA                     l755:	
   413                           
   414                           ;Servo_Motor_PWM.c: 71:             _delay((unsigned long)((10)*(500000/4000.0)));
   415  07EA  30F9               	movlw	249
   416  07EB  00F2               	movwf	??_main
   417  07EC                     u97:	
   418  07EC  2FED               	nop2
   419  07ED  0BF2               	decfsz	??_main,f
   420  07EE  2FEC               	goto	u97
   421  07EF  2FF0               	nop2
   422  07F0  2FF1               	nop2
   423  07F1                     l757:	
   424                           
   425                           ;Servo_Motor_PWM.c: 72:             zero_deg();
   426  07F1  120A  118A  276E  120A  118A  	fcall	_zero_deg
   427  07F6  2FBC               	goto	l735
   428  07F7  120A  118A  2800   	ljmp	start
   429  07FA                     __end_of_main:	
   430                           
   431                           	psect	text1
   432  076E                     __ptext1:	
   433 ;; *************** function _zero_deg *****************
   434 ;; Defined at:
   435 ;;		line 125 in file "Servo_Motor_PWM.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _zero_deg
   464  076E                     _zero_deg:	
   465  076E                     l727:	
   466                           ;incstack = 0
   467                           ; Regs used in _zero_deg: [wreg+status,2+status,0]
   468                           
   469                           
   470                           ;Servo_Motor_PWM.c: 126:     CCP1CONbits.DC1B = 0b00;
   471  076E  30CF               	movlw	-49
   472  076F  1283               	bcf	3,5	;RP0=0, select bank0
   473  0770  1303               	bcf	3,6	;RP1=0, select bank0
   474  0771  0597               	andwf	23,f	;volatile
   475  0772                     l729:	
   476                           
   477                           ;Servo_Motor_PWM.c: 127:     CCPR1L = 3;
   478  0772  3003               	movlw	3
   479  0773  0095               	movwf	21	;volatile
   480  0774                     l76:	
   481  0774  0008               	return
   482  0775                     __end_of_zero_deg:	
   483                           
   484                           	psect	text2
   485  0793                     __ptext2:	
   486 ;; *************** function _set_up *****************
   487 ;; Defined at:
   488 ;;		line 80 in file "Servo_Motor_PWM.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2, status,0
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           
   516                           ;psect for function _set_up
   517  0793                     _set_up:	
   518  0793                     l671:	
   519                           ;incstack = 0
   520                           ; Regs used in _set_up: [wreg+status,2+status,0]
   521                           
   522                           
   523                           ;Servo_Motor_PWM.c: 81:     OSCCONbits.IRCF = 0b011;
   524  0793  1683               	bsf	3,5	;RP0=1, select bank1
   525  0794  1303               	bcf	3,6	;RP1=0, select bank1
   526  0795  080F               	movf	15,w	;volatile
   527  0796  398F               	andlw	-113
   528  0797  3830               	iorlw	48
   529  0798  008F               	movwf	15	;volatile
   530  0799                     l673:	
   531                           
   532                           ;Servo_Motor_PWM.c: 82:     ANSEL = 0;
   533  0799  1683               	bsf	3,5	;RP0=1, select bank3
   534  079A  1703               	bsf	3,6	;RP1=1, select bank3
   535  079B  0188               	clrf	8	;volatile
   536  079C                     l675:	
   537                           
   538                           ;Servo_Motor_PWM.c: 83:     ANSELH = 0;
   539  079C  0189               	clrf	9	;volatile
   540  079D                     l677:	
   541                           
   542                           ;Servo_Motor_PWM.c: 84:     TRISA = 0;
   543  079D  1683               	bsf	3,5	;RP0=1, select bank1
   544  079E  1303               	bcf	3,6	;RP1=0, select bank1
   545  079F  0185               	clrf	5	;volatile
   546  07A0                     l679:	
   547                           
   548                           ;Servo_Motor_PWM.c: 85:     TRISB = 0;
   549  07A0  0186               	clrf	6	;volatile
   550  07A1                     l681:	
   551                           
   552                           ;Servo_Motor_PWM.c: 86:     TRISD = 0;
   553  07A1  0188               	clrf	8	;volatile
   554  07A2                     l683:	
   555                           
   556                           ;Servo_Motor_PWM.c: 87:     PORTB = 0;
   557  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   558  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   559  07A4  0186               	clrf	6	;volatile
   560  07A5                     l685:	
   561                           
   562                           ;Servo_Motor_PWM.c: 88:     PORTD = 0;
   563  07A5  0188               	clrf	8	;volatile
   564  07A6                     l687:	
   565                           
   566                           ;Servo_Motor_PWM.c: 89:     PORTA = 0;
   567  07A6  0185               	clrf	5	;volatile
   568  07A7                     l689:	
   569                           
   570                           ;Servo_Motor_PWM.c: 90:     TRISB = 0b00000011;
   571  07A7  3003               	movlw	3
   572  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   573  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   574  07AA  0086               	movwf	6	;volatile
   575  07AB                     l691:	
   576                           
   577                           ;Servo_Motor_PWM.c: 93:     INTCONbits.GIE = 1;
   578  07AB  178B               	bsf	11,7	;volatile
   579  07AC                     l693:	
   580                           
   581                           ;Servo_Motor_PWM.c: 94:     INTCONbits.PEIE = 1;
   582  07AC  170B               	bsf	11,6	;volatile
   583  07AD                     l695:	
   584                           
   585                           ;Servo_Motor_PWM.c: 95:     IOCBbits.IOCB0 = 1;
   586  07AD  1416               	bsf	22,0	;volatile
   587  07AE                     l697:	
   588                           
   589                           ;Servo_Motor_PWM.c: 96:     IOCBbits.IOCB1 = 1;
   590  07AE  1496               	bsf	22,1	;volatile
   591  07AF                     l699:	
   592                           
   593                           ;Servo_Motor_PWM.c: 97:     INTCONbits.RBIE = 1;
   594  07AF  158B               	bsf	11,3	;volatile
   595  07B0                     l701:	
   596                           
   597                           ;Servo_Motor_PWM.c: 98:     INTCONbits.RBIF = 0;
   598  07B0  100B               	bcf	11,0	;volatile
   599  07B1                     l67:	
   600  07B1  0008               	return
   601  07B2                     __end_of_set_up:	
   602                           
   603                           	psect	text3
   604  0767                     __ptext3:	
   605 ;; *************** function _final_deg *****************
   606 ;; Defined at:
   607 ;;		line 133 in file "Servo_Motor_PWM.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2, status,0
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _final_deg
   636  0767                     _final_deg:	
   637  0767                     l721:	
   638                           ;incstack = 0
   639                           ; Regs used in _final_deg: [wreg+status,2+status,0]
   640                           
   641                           
   642                           ;Servo_Motor_PWM.c: 134:     CCP1CONbits.DC1B = 0b11;
   643  0767  3030               	movlw	48
   644  0768  1283               	bcf	3,5	;RP0=0, select bank0
   645  0769  1303               	bcf	3,6	;RP1=0, select bank0
   646  076A  0497               	iorwf	23,f	;volatile
   647  076B                     l723:	
   648                           
   649                           ;Servo_Motor_PWM.c: 135:     CCPR1L = 13;
   650  076B  300D               	movlw	13
   651  076C  0095               	movwf	21	;volatile
   652  076D                     l79:	
   653  076D  0008               	return
   654  076E                     __end_of_final_deg:	
   655                           
   656                           	psect	text4
   657  0775                     __ptext4:	
   658 ;; *************** function _PWM_setup *****************
   659 ;; Defined at:
   660 ;;		line 105 in file "Servo_Motor_PWM.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _PWM_setup
   689  0775                     _PWM_setup:	
   690  0775                     l705:	
   691                           ;incstack = 0
   692                           ; Regs used in _PWM_setup: [wreg+status,2+status,0]
   693                           
   694                           
   695                           ;Servo_Motor_PWM.c: 106:     TRISCbits.TRISC2 = 1;
   696  0775  1683               	bsf	3,5	;RP0=1, select bank1
   697  0776  1303               	bcf	3,6	;RP1=0, select bank1
   698  0777  1507               	bsf	7,2	;volatile
   699  0778                     l707:	
   700                           
   701                           ;Servo_Motor_PWM.c: 107:     PR2 = 155;
   702  0778  309B               	movlw	155
   703  0779  0092               	movwf	18	;volatile
   704  077A                     l709:	
   705                           
   706                           ;Servo_Motor_PWM.c: 108:     CCP1CONbits.P1M = 0b00;
   707  077A  303F               	movlw	-193
   708  077B  1283               	bcf	3,5	;RP0=0, select bank0
   709  077C  1303               	bcf	3,6	;RP1=0, select bank0
   710  077D  0597               	andwf	23,f	;volatile
   711  077E                     l711:	
   712                           
   713                           ;Servo_Motor_PWM.c: 109:     CCP1CONbits.CCP1M = 0b1100;
   714  077E  0817               	movf	23,w	;volatile
   715  077F  39F0               	andlw	-16
   716  0780  380C               	iorlw	12
   717  0781  0097               	movwf	23	;volatile
   718                           
   719                           ;Servo_Motor_PWM.c: 110:     CCPR1L = 27;
   720  0782  301B               	movlw	27
   721  0783  0095               	movwf	21	;volatile
   722  0784                     l713:	
   723                           
   724                           ;Servo_Motor_PWM.c: 111:     CCP1CONbits.DC1B = 0b11;
   725  0784  3030               	movlw	48
   726  0785  0497               	iorwf	23,f	;volatile
   727  0786                     l715:	
   728                           
   729                           ;Servo_Motor_PWM.c: 112:     PIR1bits.TMR2IF = 0;
   730  0786  108C               	bcf	12,1	;volatile
   731  0787                     l717:	
   732                           
   733                           ;Servo_Motor_PWM.c: 113:     T2CONbits.T2CKPS = 0b11;
   734  0787  3003               	movlw	3
   735  0788  0492               	iorwf	18,f	;volatile
   736  0789                     l719:	
   737                           
   738                           ;Servo_Motor_PWM.c: 114:     T2CONbits.TMR2ON = 1;
   739  0789  1512               	bsf	18,2	;volatile
   740  078A                     l70:	
   741                           ;Servo_Motor_PWM.c: 116:     }
   742                           
   743                           
   744                           ;Servo_Motor_PWM.c: 115:     while(!TMR2IF){
   745  078A  1C8C               	btfss	12,1	;volatile
   746  078B  2F8D               	goto	u11
   747  078C  2F8E               	goto	u10
   748  078D                     u11:	
   749  078D  2F8A               	goto	l70
   750  078E                     u10:	
   751  078E                     l72:	
   752                           
   753                           ;Servo_Motor_PWM.c: 117:     PIR1bits.TMR2IF = 0;
   754  078E  108C               	bcf	12,1	;volatile
   755                           
   756                           ;Servo_Motor_PWM.c: 118:     TRISCbits.TRISC2 = 0;
   757  078F  1683               	bsf	3,5	;RP0=1, select bank1
   758  0790  1303               	bcf	3,6	;RP1=0, select bank1
   759  0791  1107               	bcf	7,2	;volatile
   760  0792                     l73:	
   761                           ;Servo_Motor_PWM.c: 120:     return;
   762                           
   763  0792  0008               	return
   764  0793                     __end_of_PWM_setup:	
   765  007E                     btemp	set	126	;btemp
   766  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMMON     1     1      0
                          _PWM_setup
                          _final_deg
                             _set_up
                           _zero_deg
 ---------------------------------------------------------------------------------
 (1) _zero_deg                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_up                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _final_deg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_setup
   _final_deg
   _set_up
   _zero_deg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 08 21:08:43 2020

             __CFG_CP$OFF 0000                        l70 078A                        l72 078E  
                      l73 0792                        l67 07B1                        l76 0774  
                      l79 076D                        u10 078E                        u11 078D  
                      u20 07C2                        u21 07C1                        u30 07C9  
                      u31 07C8                        u40 07CD                        u41 07CC  
                      u50 07DF                        u51 07DE                        u60 07E6  
                      u61 07E5                        u70 07EA                        u71 07E9  
                      u87 07CF                        u97 07EC                       l701 07B0  
                     l711 077E                       l713 0784                       l705 0775  
                     l721 0767                       l715 0786                       l707 0778  
                     l723 076B                       l717 0787                       l709 077A  
                     l741 07C9                       l733 07B2                       l719 0789  
                     l671 0793                       l727 076E                       l751 07E1  
                     l743 07CD                       l735 07BC                       l681 07A1  
                     l673 0799                       l729 0772                       l753 07E6  
                     l745 07D4                       l737 07C2                       l691 07AB  
                     l683 07A2                       l675 079C                       l755 07EA  
                     l747 07D9                       l739 07C4                       l693 07AC  
                     l685 07A5                       l677 079D                       l757 07F1  
                     l749 07DF                       l695 07AD                       l687 07A6  
                     l679 07A0                       l697 07AE                       l689 07A7  
                     l699 07AF                       _PR2 0092              __CFG_CPD$OFF 0000  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _main 07B2  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0072             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000                     _push1 0071                     _push2 0070  
          __CFG_BOREN$OFF 0000                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07FA        __size_of_PWM_setup 001E  
            __end_of_main 07FA                    ??_main 0072                    _CCPR1L 0015  
                  _ANSELH 0189                    _TMR2IF 0061            __CFG_PWRTE$OFF 0000  
                  _set_up 0793         __end_of_PWM_setup 0793          __end_of_zero_deg 0775  
 __end_of__initialization 07FC            __pcstackCOMMON 0072        __size_of_final_deg 0007  
              __pmaintext 07B2                   ?_set_up 0072         __end_of_final_deg 076E  
               ?_zero_deg 0072                   __ptext1 076E                   __ptext2 0793  
                 __ptext3 0767                   __ptext4 0775           __size_of_set_up 001F  
               _T2CONbits 0012      end_of_initialization 07FC                ??_zero_deg 0072  
               _PORTBbits 0006                 _TRISCbits 0087                 _PWM_setup 0775  
             _CCP1CONbits 0017            __end_of_set_up 07B2       start_initialization 07FA  
              ?_PWM_setup 0072  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_set_up 0072  
             __pbssCOMMON 0070                 ___latbits 0002                 _final_deg 0767  
       __size_of_zero_deg 0007               ??_PWM_setup 0072                  _IOCBbits 0096  
                _PIR1bits 000C                ?_final_deg 0072         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0048               ??_final_deg 0072                  _zero_deg 076E  
              _INTCONbits 000B                _OSCCONbits 008F  
