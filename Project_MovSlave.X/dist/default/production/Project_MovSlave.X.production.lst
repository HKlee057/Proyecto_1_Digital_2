

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 08 15:20:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0008                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0088                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  008F                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0097                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009A                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  0105                     	;# 
   347  0107                     	;# 
   348  0108                     	;# 
   349  0109                     	;# 
   350  010C                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  0185                     	;# 
   356  0187                     	;# 
   357  0188                     	;# 
   358  0189                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0005                     _PORTAbits	set	5
   362  0008                     _PORTDbits	set	8
   363  0008                     _PORTD	set	8
   364  0007                     _PORTC	set	7
   365  0006                     _PORTB	set	6
   366  0005                     _PORTA	set	5
   367  0014                     _SSPCONbits	set	20
   368  000C                     _PIR1bits	set	12
   369  0013                     _SSPBUF	set	19
   370  0014                     _SSPCON	set	20
   371  0063                     _SSPIF	set	99
   372  005E                     _PEIE	set	94
   373  005F                     _GIE	set	95
   374  0088                     _TRISD	set	136
   375  0087                     _TRISC	set	135
   376  0086                     _TRISB	set	134
   377  0085                     _TRISA	set	133
   378  0094                     _SSPSTATbits	set	148
   379  008F                     _OSCCONbits	set	143
   380  0091                     _SSPCON2bits	set	145
   381  0087                     _TRISCbits	set	135
   382  0094                     _SSPSTAT	set	148
   383  0093                     _SSPADD	set	147
   384  0091                     _SSPCON2	set	145
   385  04A0                     _BF	set	1184
   386  0463                     _SSPIE	set	1123
   387  043C                     _TRISC4	set	1084
   388  043B                     _TRISC3	set	1083
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           ; #config settings
   393  0000                     
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396  000F                     __initialization:	
   397                           
   398                           ; Clear objects allocated to COMMON
   399  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   400  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   401  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   402  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   403  0013  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   404  0014                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  0014                     __end_of__initialization:	
   408  0014  0183               	clrf	3
   409  0015  120A  118A  28D9   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0076                     __pbssCOMMON:	
   413  0076                     _move_servo:	
   414  0076                     	ds	2
   415  0078                     _sensor_signal:	
   416  0078                     	ds	1
   417  0079                     _pirValue:	
   418  0079                     	ds	1
   419  007A                     _z:	
   420  007A                     	ds	1
   421                           
   422                           	psect	cstackCOMMON
   423  0070                     __pcstackCOMMON:	
   424  0070                     ?_init:	
   425  0070                     ?_I2C_Slave_Init:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_initOsc:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_isr:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442  0070                     	ds	3
   443  0073                     ??_I2C_Slave_Init:	
   444  0073                     ??_initOsc:	
   445                           ; 1 bytes @ 0x3
   446                           
   447  0073                     I2C_Slave_Init@address:	
   448                           ; 1 bytes @ 0x3
   449                           
   450                           
   451                           ; 1 bytes @ 0x3
   452  0073                     	ds	1
   453  0074                     ??_init:	
   454                           
   455                           ; 1 bytes @ 0x4
   456  0074                     	ds	1
   457  0075                     initOsc@frec:	
   458                           
   459                           ; 1 bytes @ 0x5
   460  0075                     	ds	1
   461  0076                     ??_main:	
   462                           
   463                           	psect	maintext
   464  00D9                     __pmaintext:	
   465                           ; 1 bytes @ 0x6
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 89 in file "Sensor_Movimiento.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : B00/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels required when called:    3
   491 ;; This function calls:
   492 ;;		_init
   493 ;;		_initOsc
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _main
   501  00D9                     _main:	
   502  00D9                     l854:	
   503                           ;incstack = 0
   504                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   505                           
   506                           
   507                           ;Sensor_Movimiento.c: 90:     initOsc(7);
   508  00D9  3007               	movlw	7
   509  00DA  120A  118A  207D  120A  118A  	fcall	_initOsc
   510  00DF                     l856:	
   511                           
   512                           ;Sensor_Movimiento.c: 91:     init();
   513  00DF  120A  118A  2111  120A  118A  	fcall	_init
   514  00E4                     l858:	
   515                           
   516                           ;Sensor_Movimiento.c: 93:     PORTA = 0x00;
   517  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   518  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   519  00E6  0185               	clrf	5	;volatile
   520  00E7                     l860:	
   521                           
   522                           ;Sensor_Movimiento.c: 94:     PORTB = 0x00;
   523  00E7  0186               	clrf	6	;volatile
   524  00E8                     l862:	
   525                           
   526                           ;Sensor_Movimiento.c: 95:     PORTC = 0x00;
   527  00E8  0187               	clrf	7	;volatile
   528  00E9                     l864:	
   529                           
   530                           ;Sensor_Movimiento.c: 96:     PORTD = 0x00;
   531  00E9  0188               	clrf	8	;volatile
   532  00EA                     l866:	
   533                           
   534                           ;Sensor_Movimiento.c: 98:         pirValue = PORTDbits.RD0;
   535  00EA  3000               	movlw	0
   536  00EB  1808               	btfsc	8,0	;volatile
   537  00EC  3001               	movlw	1
   538  00ED  00F9               	movwf	_pirValue
   539  00EE                     l868:	
   540                           
   541                           ;Sensor_Movimiento.c: 99:         PORTAbits.RA0 = pirValue;
   542  00EE  0C79               	rrf	_pirValue,w
   543  00EF  1C03               	skipc
   544  00F0  1005               	bcf	5,0	;volatile
   545  00F1  1803               	skipnc
   546  00F2  1405               	bsf	5,0	;volatile
   547  00F3  28EA               	goto	l866
   548  00F4  120A  118A  280C   	ljmp	start
   549  00F7                     __end_of_main:	
   550                           
   551                           	psect	text1
   552  007D                     __ptext1:	
   553 ;; *************** function _initOsc *****************
   554 ;; Defined at:
   555 ;;		line 8 in file "Oscilador.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  frec            1    wreg     unsigned char 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  frec            1    5[COMMON] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         1       0       0       0       0
   571 ;;      Temps:          2       0       0       0       0
   572 ;;      Totals:         3       0       0       0       0
   573 ;;Total ram usage:        3 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _initOsc
   585  007D                     _initOsc:	
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   589                           ;initOsc@frec stored from wreg
   590  007D  00F5               	movwf	initOsc@frec
   591  007E                     l758:	
   592                           
   593                           ;Oscilador.c: 9:     switch(frec){
   594  007E  28B5               	goto	l762
   595  007F                     l59:	
   596                           ;Oscilador.c: 10:         case 0:
   597                           
   598                           
   599                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   600  007F  1683               	bsf	3,5	;RP0=1, select bank1
   601  0080  1303               	bcf	3,6	;RP1=0, select bank1
   602  0081  120F               	bcf	15,4	;volatile
   603                           
   604                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   605  0082  128F               	bcf	15,5	;volatile
   606                           
   607                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   608  0083  130F               	bcf	15,6	;volatile
   609                           
   610                           ;Oscilador.c: 14:             break;
   611  0084  28D7               	goto	l60
   612  0085                     l61:	
   613                           ;Oscilador.c: 15:         case 1:
   614                           
   615                           
   616                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   617  0085  1683               	bsf	3,5	;RP0=1, select bank1
   618  0086  1303               	bcf	3,6	;RP1=0, select bank1
   619  0087  160F               	bsf	15,4	;volatile
   620                           
   621                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   622  0088  128F               	bcf	15,5	;volatile
   623                           
   624                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   625  0089  130F               	bcf	15,6	;volatile
   626                           
   627                           ;Oscilador.c: 19:             break;
   628  008A  28D7               	goto	l60
   629  008B                     l62:	
   630                           ;Oscilador.c: 20:         case 2:
   631                           
   632                           
   633                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
   634  008B  1683               	bsf	3,5	;RP0=1, select bank1
   635  008C  1303               	bcf	3,6	;RP1=0, select bank1
   636  008D  120F               	bcf	15,4	;volatile
   637                           
   638                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
   639  008E  168F               	bsf	15,5	;volatile
   640                           
   641                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   642  008F  130F               	bcf	15,6	;volatile
   643                           
   644                           ;Oscilador.c: 24:             break;
   645  0090  28D7               	goto	l60
   646  0091                     l63:	
   647                           ;Oscilador.c: 25:         case 3:
   648                           
   649                           
   650                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
   651  0091  1683               	bsf	3,5	;RP0=1, select bank1
   652  0092  1303               	bcf	3,6	;RP1=0, select bank1
   653  0093  160F               	bsf	15,4	;volatile
   654                           
   655                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
   656  0094  168F               	bsf	15,5	;volatile
   657                           
   658                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   659  0095  130F               	bcf	15,6	;volatile
   660                           
   661                           ;Oscilador.c: 29:             break;
   662  0096  28D7               	goto	l60
   663  0097                     l64:	
   664                           ;Oscilador.c: 30:         case 4:
   665                           
   666                           
   667                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
   668  0097  1683               	bsf	3,5	;RP0=1, select bank1
   669  0098  1303               	bcf	3,6	;RP1=0, select bank1
   670  0099  120F               	bcf	15,4	;volatile
   671                           
   672                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
   673  009A  128F               	bcf	15,5	;volatile
   674                           
   675                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
   676  009B  170F               	bsf	15,6	;volatile
   677                           
   678                           ;Oscilador.c: 34:             break;
   679  009C  28D7               	goto	l60
   680  009D                     l65:	
   681                           ;Oscilador.c: 35:         case 5:
   682                           
   683                           
   684                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
   685  009D  1683               	bsf	3,5	;RP0=1, select bank1
   686  009E  1303               	bcf	3,6	;RP1=0, select bank1
   687  009F  160F               	bsf	15,4	;volatile
   688                           
   689                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
   690  00A0  128F               	bcf	15,5	;volatile
   691                           
   692                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
   693  00A1  170F               	bsf	15,6	;volatile
   694                           
   695                           ;Oscilador.c: 39:             break;
   696  00A2  28D7               	goto	l60
   697  00A3                     l66:	
   698                           ;Oscilador.c: 40:         case 6:
   699                           
   700                           
   701                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
   702  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   703  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   704  00A5  120F               	bcf	15,4	;volatile
   705                           
   706                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
   707  00A6  168F               	bsf	15,5	;volatile
   708                           
   709                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
   710  00A7  170F               	bsf	15,6	;volatile
   711                           
   712                           ;Oscilador.c: 44:             break;
   713  00A8  28D7               	goto	l60
   714  00A9                     l67:	
   715                           ;Oscilador.c: 45:         case 7:
   716                           
   717                           
   718                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
   719  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   720  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   721  00AB  160F               	bsf	15,4	;volatile
   722                           
   723                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
   724  00AC  168F               	bsf	15,5	;volatile
   725                           
   726                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
   727  00AD  170F               	bsf	15,6	;volatile
   728                           
   729                           ;Oscilador.c: 49:             break;
   730  00AE  28D7               	goto	l60
   731  00AF                     l68:	
   732                           ;Oscilador.c: 50:         default:
   733                           
   734                           
   735                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
   736  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   737  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   738  00B1  120F               	bcf	15,4	;volatile
   739                           
   740                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
   741  00B2  168F               	bsf	15,5	;volatile
   742                           
   743                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
   744  00B3  170F               	bsf	15,6	;volatile
   745                           
   746                           ;Oscilador.c: 54:             break;
   747  00B4  28D7               	goto	l60
   748  00B5                     l762:	
   749  00B5  0875               	movf	initOsc@frec,w
   750  00B6  00F3               	movwf	??_initOsc
   751  00B7  01F4               	clrf	??_initOsc+1
   752                           
   753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 1, Range of values is 0 to 0
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte            4     3 (average)
   759                           ; direct_byte           11     8 (fixed)
   760                           ; jumptable            260     6 (fixed)
   761                           ;	Chosen strategy is simple_byte
   762  00B8  0874               	movf	??_initOsc+1,w
   763  00B9  3A00               	xorlw	0	; case 0
   764  00BA  1903               	skipnz
   765  00BB  28BD               	goto	l890
   766  00BC  28AF               	goto	l68
   767  00BD                     l890:	
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 8, Range of values is 0 to 7
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte           25    13 (average)
   774                           ; direct_byte           32     8 (fixed)
   775                           ; jumptable            260     6 (fixed)
   776                           ;	Chosen strategy is simple_byte
   777  00BD  0873               	movf	??_initOsc,w
   778  00BE  3A00               	xorlw	0	; case 0
   779  00BF  1903               	skipnz
   780  00C0  287F               	goto	l59
   781  00C1  3A01               	xorlw	1	; case 1
   782  00C2  1903               	skipnz
   783  00C3  2885               	goto	l61
   784  00C4  3A03               	xorlw	3	; case 2
   785  00C5  1903               	skipnz
   786  00C6  288B               	goto	l62
   787  00C7  3A01               	xorlw	1	; case 3
   788  00C8  1903               	skipnz
   789  00C9  2891               	goto	l63
   790  00CA  3A07               	xorlw	7	; case 4
   791  00CB  1903               	skipnz
   792  00CC  2897               	goto	l64
   793  00CD  3A01               	xorlw	1	; case 5
   794  00CE  1903               	skipnz
   795  00CF  289D               	goto	l65
   796  00D0  3A03               	xorlw	3	; case 6
   797  00D1  1903               	skipnz
   798  00D2  28A3               	goto	l66
   799  00D3  3A01               	xorlw	1	; case 7
   800  00D4  1903               	skipnz
   801  00D5  28A9               	goto	l67
   802  00D6  28AF               	goto	l68
   803  00D7                     l60:	
   804                           
   805                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
   806  00D7  140F               	bsf	15,0	;volatile
   807  00D8                     l69:	
   808  00D8  0008               	return
   809  00D9                     __end_of_initOsc:	
   810                           
   811                           	psect	text2
   812  0111                     __ptext2:	
   813 ;; *************** function _init *****************
   814 ;; Defined at:
   815 ;;		line 107 in file "Sensor_Movimiento.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         0       0       0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    2
   836 ;; This function calls:
   837 ;;		_I2C_Slave_Init
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _init
   845  0111                     _init:	
   846  0111                     l768:	
   847                           ;incstack = 0
   848                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   849                           
   850                           
   851                           ;Sensor_Movimiento.c: 108:     TRISA = 0;
   852  0111  1683               	bsf	3,5	;RP0=1, select bank1
   853  0112  1303               	bcf	3,6	;RP1=0, select bank1
   854  0113  0185               	clrf	5	;volatile
   855                           
   856                           ;Sensor_Movimiento.c: 109:     TRISB = 0;
   857  0114  0186               	clrf	6	;volatile
   858                           
   859                           ;Sensor_Movimiento.c: 110:     TRISC = 0;
   860  0115  0187               	clrf	7	;volatile
   861  0116                     l770:	
   862                           
   863                           ;Sensor_Movimiento.c: 111:     TRISD = 0b00000001;
   864  0116  3001               	movlw	1
   865  0117  0088               	movwf	8	;volatile
   866  0118                     l772:	
   867                           
   868                           ;Sensor_Movimiento.c: 112:     ANSEL = 0;
   869  0118  1683               	bsf	3,5	;RP0=1, select bank3
   870  0119  1703               	bsf	3,6	;RP1=1, select bank3
   871  011A  0188               	clrf	8	;volatile
   872  011B                     l774:	
   873                           
   874                           ;Sensor_Movimiento.c: 113:     ANSELH = 0;
   875  011B  0189               	clrf	9	;volatile
   876  011C                     l776:	
   877                           
   878                           ;Sensor_Movimiento.c: 114:     I2C_Slave_Init(0x30);
   879  011C  3030               	movlw	48
   880  011D  120A  118A  20F7  120A  118A  	fcall	_I2C_Slave_Init
   881  0122                     l148:	
   882  0122  0008               	return
   883  0123                     __end_of_init:	
   884                           
   885                           	psect	text3
   886  00F7                     __ptext3:	
   887 ;; *************** function _I2C_Slave_Init *****************
   888 ;; Defined at:
   889 ;;		line 85 in file "I2C.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  address         1    wreg     unsigned char 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  address         1    3[COMMON] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0
   906 ;;      Totals:         1       0       0       0       0
   907 ;;Total ram usage:        1 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_init
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _I2C_Slave_Init
   919  00F7                     _I2C_Slave_Init:	
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _I2C_Slave_Init: [wreg]
   923                           ;I2C_Slave_Init@address stored from wreg
   924  00F7  00F3               	movwf	I2C_Slave_Init@address
   925  00F8                     l740:	
   926                           
   927                           ;I2C.c: 85: void I2C_Slave_Init(uint8_t address);I2C.c: 86: {;I2C.c: 87:     SSPADD = ad
      +                          dress;
   928  00F8  0873               	movf	I2C_Slave_Init@address,w
   929  00F9  1683               	bsf	3,5	;RP0=1, select bank1
   930  00FA  1303               	bcf	3,6	;RP1=0, select bank1
   931  00FB  0093               	movwf	19	;volatile
   932                           
   933                           ;I2C.c: 88:     SSPCON = 0x36;
   934  00FC  3036               	movlw	54
   935  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   936  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   937  00FF  0094               	movwf	20	;volatile
   938                           
   939                           ;I2C.c: 89:     SSPSTAT = 0x80;
   940  0100  3080               	movlw	128
   941  0101  1683               	bsf	3,5	;RP0=1, select bank1
   942  0102  1303               	bcf	3,6	;RP1=0, select bank1
   943  0103  0094               	movwf	20	;volatile
   944                           
   945                           ;I2C.c: 90:     SSPCON2 = 0x01;
   946  0104  3001               	movlw	1
   947  0105  0091               	movwf	17	;volatile
   948  0106                     l742:	
   949                           
   950                           ;I2C.c: 91:     TRISC3 = 1;
   951  0106  1587               	bsf	7,3	;volatile
   952  0107                     l744:	
   953                           
   954                           ;I2C.c: 92:     TRISC4 = 1;
   955  0107  1607               	bsf	7,4	;volatile
   956  0108                     l746:	
   957                           
   958                           ;I2C.c: 93:     GIE = 1;
   959  0108  178B               	bsf	11,7	;volatile
   960  0109                     l748:	
   961                           
   962                           ;I2C.c: 94:     PEIE = 1;
   963  0109  170B               	bsf	11,6	;volatile
   964  010A                     l750:	
   965                           
   966                           ;I2C.c: 95:     SSPIF = 0;
   967  010A  1283               	bcf	3,5	;RP0=0, select bank0
   968  010B  1303               	bcf	3,6	;RP1=0, select bank0
   969  010C  118C               	bcf	12,3	;volatile
   970  010D                     l752:	
   971                           
   972                           ;I2C.c: 96:     SSPIE = 1;
   973  010D  1683               	bsf	3,5	;RP0=1, select bank1
   974  010E  1303               	bcf	3,6	;RP1=0, select bank1
   975  010F  158C               	bsf	12,3	;volatile
   976  0110                     l53:	
   977  0110  0008               	return
   978  0111                     __end_of_I2C_Slave_Init:	
   979                           
   980                           	psect	text4
   981  0018                     __ptext4:	
   982 ;; *************** function _isr *****************
   983 ;; Defined at:
   984 ;;		line 53 in file "Sensor_Movimiento.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          3       0       0       0       0
  1001 ;;      Totals:         3       0       0       0       0
  1002 ;;Total ram usage:        3 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		Interrupt level 1
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _isr
  1013  0018                     _isr:	
  1014  0018                     i1l820:	
  1015                           
  1016                           ;Sensor_Movimiento.c: 55:     if(PIR1bits.SSPIF == 1){
  1017  0018  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0019  1303               	bcf	3,6	;RP1=0, select bank0
  1019  001A  1D8C               	btfss	12,3	;volatile
  1020  001B  281D               	goto	u6_21
  1021  001C  281E               	goto	u6_20
  1022  001D                     u6_21:	
  1023  001D  2876               	goto	i1l137
  1024  001E                     u6_20:	
  1025  001E                     i1l822:	
  1026                           
  1027                           ;Sensor_Movimiento.c: 57:             SSPCONbits.CKP = 0;
  1028  001E  1214               	bcf	20,4	;volatile
  1029                           
  1030                           ;Sensor_Movimiento.c: 59:             if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1031  001F  1B14               	btfsc	20,6	;volatile
  1032  0020  2822               	goto	u7_21
  1033  0021  2823               	goto	u7_20
  1034  0022                     u7_21:	
  1035  0022  2827               	goto	i1l826
  1036  0023                     u7_20:	
  1037  0023                     i1l824:	
  1038  0023  1F94               	btfss	20,7	;volatile
  1039  0024  2826               	goto	u8_21
  1040  0025  2827               	goto	u8_20
  1041  0026                     u8_21:	
  1042  0026  282E               	goto	i1l834
  1043  0027                     u8_20:	
  1044  0027                     i1l826:	
  1045                           
  1046                           ;Sensor_Movimiento.c: 60:                 z = SSPBUF;
  1047  0027  0813               	movf	19,w	;volatile
  1048  0028  00F0               	movwf	??_isr
  1049  0029  0870               	movf	??_isr,w
  1050  002A  00FA               	movwf	_z
  1051  002B                     i1l828:	
  1052                           
  1053                           ;Sensor_Movimiento.c: 61:                 SSPCONbits.SSPOV = 0;
  1054  002B  1314               	bcf	20,6	;volatile
  1055  002C                     i1l830:	
  1056                           
  1057                           ;Sensor_Movimiento.c: 62:                 SSPCONbits.WCOL = 0;
  1058  002C  1394               	bcf	20,7	;volatile
  1059  002D                     i1l832:	
  1060                           
  1061                           ;Sensor_Movimiento.c: 63:                 SSPCONbits.CKP = 1;
  1062  002D  1614               	bsf	20,4	;volatile
  1063  002E                     i1l834:	
  1064                           
  1065                           ;Sensor_Movimiento.c: 66:             if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1066  002E  1683               	bsf	3,5	;RP0=1, select bank1
  1067  002F  1303               	bcf	3,6	;RP1=0, select bank1
  1068  0030  1A94               	btfsc	20,5	;volatile
  1069  0031  2833               	goto	u9_21
  1070  0032  2834               	goto	u9_20
  1071  0033                     u9_21:	
  1072  0033  2852               	goto	i1l128
  1073  0034                     u9_20:	
  1074  0034                     i1l836:	
  1075  0034  1914               	btfsc	20,2	;volatile
  1076  0035  2837               	goto	u10_21
  1077  0036  2838               	goto	u10_20
  1078  0037                     u10_21:	
  1079  0037  2852               	goto	i1l128
  1080  0038                     u10_20:	
  1081  0038                     i1l838:	
  1082                           
  1083                           ;Sensor_Movimiento.c: 67:                 z = SSPBUF;
  1084  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1086  003A  0813               	movf	19,w	;volatile
  1087  003B  00F0               	movwf	??_isr
  1088  003C  0870               	movf	??_isr,w
  1089  003D  00FA               	movwf	_z
  1090  003E                     i1l840:	
  1091                           
  1092                           ;Sensor_Movimiento.c: 68:                 PIR1bits.SSPIF = 0;
  1093  003E  118C               	bcf	12,3	;volatile
  1094  003F                     i1l842:	
  1095                           
  1096                           ;Sensor_Movimiento.c: 69:                 SSPCONbits.CKP = 1;
  1097  003F  1614               	bsf	20,4	;volatile
  1098  0040                     i1l129:	
  1099                           ;Sensor_Movimiento.c: 70:                 while(!SSPSTATbits.BF);
  1100                           
  1101  0040  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0041  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0042  1C14               	btfss	20,0	;volatile
  1104  0043  2845               	goto	u11_21
  1105  0044  2846               	goto	u11_20
  1106  0045                     u11_21:	
  1107  0045  2840               	goto	i1l129
  1108  0046                     u11_20:	
  1109  0046                     i1l844:	
  1110                           
  1111                           ;Sensor_Movimiento.c: 71:                 pirValue = SSPBUF;
  1112  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0048  0813               	movf	19,w	;volatile
  1115  0049  00F0               	movwf	??_isr
  1116  004A  0870               	movf	??_isr,w
  1117  004B  00F9               	movwf	_pirValue
  1118                           
  1119                           ;Sensor_Movimiento.c: 72:                 _delay((unsigned long)((250)*(8000000/4000000.
      +                          0)));
  1120  004C  30A6               	movlw	166
  1121  004D  00F0               	movwf	??_isr
  1122  004E                     u15_27:	
  1123  004E  0BF0               	decfsz	??_isr,f
  1124  004F  284E               	goto	u15_27
  1125  0050  0000               	nop
  1126                           
  1127                           ;Sensor_Movimiento.c: 74:             }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1128  0051  2873               	goto	i1l132
  1129  0052                     i1l128:	
  1130  0052  1A94               	btfsc	20,5	;volatile
  1131  0053  2855               	goto	u12_21
  1132  0054  2856               	goto	u12_20
  1133  0055                     u12_21:	
  1134  0055  2873               	goto	i1l132
  1135  0056                     u12_20:	
  1136  0056                     i1l846:	
  1137  0056  1D14               	btfss	20,2	;volatile
  1138  0057  2859               	goto	u13_21
  1139  0058  285A               	goto	u13_20
  1140  0059                     u13_21:	
  1141  0059  2873               	goto	i1l132
  1142  005A                     u13_20:	
  1143  005A                     i1l848:	
  1144                           
  1145                           ;Sensor_Movimiento.c: 75:                 z = SSPBUF;
  1146  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1147  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1148  005C  0813               	movf	19,w	;volatile
  1149  005D  00F0               	movwf	??_isr
  1150  005E  0870               	movf	??_isr,w
  1151  005F  00FA               	movwf	_z
  1152  0060                     i1l850:	
  1153                           
  1154                           ;Sensor_Movimiento.c: 76:                 BF = 0;
  1155  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1156  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1157  0062  1014               	bcf	20,0	;volatile
  1158                           
  1159                           ;Sensor_Movimiento.c: 77:                 SSPBUF = pirValue;
  1160  0063  0879               	movf	_pirValue,w
  1161  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0066  0093               	movwf	19	;volatile
  1164  0067                     i1l852:	
  1165                           
  1166                           ;Sensor_Movimiento.c: 78:                 SSPCONbits.CKP = 1;
  1167  0067  1614               	bsf	20,4	;volatile
  1168                           
  1169                           ;Sensor_Movimiento.c: 79:                 _delay((unsigned long)((250)*(8000000/4000000.
      +                          0)));
  1170  0068  30A6               	movlw	166
  1171  0069  00F0               	movwf	??_isr
  1172  006A                     u16_27:	
  1173  006A  0BF0               	decfsz	??_isr,f
  1174  006B  286A               	goto	u16_27
  1175  006C  0000               	nop
  1176  006D                     i1l134:	
  1177                           ;Sensor_Movimiento.c: 80:                 while(SSPSTATbits.BF);
  1178                           
  1179  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1180  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1181  006F  1814               	btfsc	20,0	;volatile
  1182  0070  2872               	goto	u14_21
  1183  0071  2873               	goto	u14_20
  1184  0072                     u14_21:	
  1185  0072  286D               	goto	i1l134
  1186  0073                     u14_20:	
  1187  0073                     i1l132:	
  1188                           
  1189                           ;Sensor_Movimiento.c: 83:             PIR1bits.SSPIF = 0;
  1190  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0075  118C               	bcf	12,3	;volatile
  1193  0076                     i1l137:	
  1194  0076  0872               	movf	??_isr+2,w
  1195  0077  008A               	movwf	10
  1196  0078  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1197  0079  0083               	movwf	3
  1198  007A  0EFE               	swapf	btemp,f
  1199  007B  0E7E               	swapf	btemp,w
  1200  007C  0009               	retfie
  1201  007D                     __end_of_isr:	
  1202  007E                     btemp	set	126	;btemp
  1203  007E                     wtemp0	set	126
  1204                           
  1205                           	psect	intentry
  1206  0004                     __pintentry:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _isr: [wreg]
  1209                           
  1210  0004                     interrupt_function:	
  1211  007E                     saved_w	set	btemp
  1212  0004  00FE               	movwf	btemp
  1213  0005  0E03               	swapf	3,w
  1214  0006  00F1               	movwf	??_isr+1
  1215  0007  080A               	movf	10,w
  1216  0008  00F2               	movwf	??_isr+2
  1217  0009  120A  118A  2818   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initOsc
    _init->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _I2C_Slave_Init
   _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 08 15:20:17 2020

                       _z 007A               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l60 00D7                        l53 0110  
                      l61 0085                        l62 008B                        l63 0091  
                      l64 0097                        l65 009D                        l66 00A3  
                      l67 00A9                        l59 007F                        l68 00AF  
                      l69 00D8                       l148 0122                       l740 00F8  
                     l750 010A                       l742 0106                       l752 010D  
                     l744 0107                       l746 0108                       l770 0116  
                     l762 00B5                       l748 0109                       l772 0118  
                     l860 00E7                       l774 011B                       l758 007E  
                     l862 00E8                       l854 00D9                       l776 011C  
                     l768 0111                       l864 00E9                       l856 00DF  
                     l890 00BD                       l866 00EA                       l858 00E4  
                     l868 00EE                       _GIE 005F              __CFG_CPD$OFF 0000  
                     _isr 0018              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    _PEIE 005E                      u6_20 001E                      u6_21 001D  
                    u7_20 0023                      u7_21 0022                      u8_20 0027  
                    u8_21 0026                      u9_20 0034                      u9_21 0033  
            __CFG_WRT$OFF 0000                      _main 00D9                      _init 0111  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l132 0073  
                   i1l134 006D                     i1l128 0052                     i1l129 0040  
                   i1l137 0076                     i1l820 0018                     i1l830 002C  
                   i1l822 001E                     i1l840 003E                     i1l832 002D  
                   i1l824 0023                     i1l850 0060                     i1l842 003F  
                   i1l834 002E                     i1l826 0027                     i1l852 0067  
                   i1l844 0046                     i1l836 0034                     i1l828 002B  
                   i1l846 0056                     i1l838 0038                     i1l848 005A  
                   u10_20 0038                     u10_21 0037                     u11_20 0046  
                   u11_21 0045                     u12_20 0056                     u12_21 0055  
                   u13_20 005A                     u13_21 0059                     u14_20 0073  
                   u14_21 0072                     u15_27 004E                     u16_27 006A  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000           __end_of_initOsc 00D9  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 00F7              __end_of_init 0123                    ??_main 0076  
                  ??_init 0074                    _ANSELH 0189               initOsc@frec 0075  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
               ??_initOsc 0073                    saved_w 007E   __end_of__initialization 0014  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A     I2C_Slave_Init@address 0073  
              __pmaintext 00D9                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                   __ptext1 007D                   __ptext2 0111  
                 __ptext3 00F7                   __ptext4 0018                   _initOsc 007D  
            __size_of_isr 0065      end_of_initialization 0014                _move_servo 0076  
          _I2C_Slave_Init 00F7                 _PORTAbits 0005                 _PORTDbits 0008  
               _TRISCbits 0087    __end_of_I2C_Slave_Init 0111       start_initialization 000F  
             __end_of_isr 007D  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070  
             __pbssCOMMON 0076                 ___latbits 0002                  ?_initOsc 0070  
       interrupt_function 0004                  _PIR1bits 000C          __size_of_initOsc 005C  
           _sensor_signal 0078         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0073  
           __size_of_main 001E             __size_of_init 0012                  _pirValue 0079  
                intlevel1 0000                _OSCCONbits 008F               _SSPCON2bits 0091  
              _SSPCONbits 0014  
